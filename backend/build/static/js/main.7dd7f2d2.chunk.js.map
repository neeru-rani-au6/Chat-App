{"version":3,"sources":["redux/action/user.js","redux/type.js","components/login.js","components/register.js","components/forgotPassword.js","redux/action/group.js","components/header.js","redux/action/request.js","page/home.js","page/profile.js","components/resetpassword.js","page/friend.js","redux/action/chat.js","page/group.js","app.js","redux/reducer/user.js","redux/reducer/request.js","redux/reducer/group.js","redux/reducer/chat.js","redux/store.js","index.js","assets/images/user.jpg","assets/images/ouricon.jpg"],"names":["registerUser","user","dispatch","a","console","log","formData","FormData","append","firstName","lastName","email","password","photoURL","name","axios","method","url","data","headers","type","payload","error","info","response","message","loginUser","isAuthenticated","forgotPassword","useremail","changePassword","resetToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","background","padding","boxShadow","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useSelector","state","userState","history","useHistory","useDispatch","useState","isSubmitting","setState","handleChange","key","value","handleSubmit","e","preventDefault","push","Container","component","maxWidth","CssBaseline","className","Typography","variant","src","Ouricon","alt","style","onSubmit","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","Grid","item","xs","float","Link","href","Button","color","disabled","container","justify","Register","firstNameError","lastNameError","emailError","passwordError","newState","match","trim","length","sm","helperText","accept","input","files","htmlFor","IconButton","aria-label","connect","props","reset","Avatar","createGroup","group","groupName","findGroups","searchUser","searchQuery","root","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","menuLogo","textTransform","borderRadius","fontSize","search","position","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","rootclick","dropdown","top","right","left","border","isAuth","groupReducer","logout","useTheme","React","open","setOpen","openClick","setopenClick","anchorEl","setAnchorEl","searchQueryResult","handleClose","logoutUser","handleSubmitSearch","prev","AppBar","clsx","Toolbar","noWrap","InputBase","placeholder","inputProps","ClickAwayListener","onClickAway","direction","map","_id","Card","CardHeader","userimage","title","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","to","textDecoration","Drawer","Divider","List","ListItem","button","ListItemIcon","sendRequest","request","Home","users","snackbarOpen","snackbarMessage","snackbarSeverity","receiver","sender","acceptGroupRequest","groupId","updatetRequest","isAccepted","allRequest","Accept","friend","Reject","isReject","showSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","this","allUser","CardMedia","image","CardActions","fontWeight","Paper","textAlign","requests","CircularProgress","Component","requestReducer","defaults","withCredentials","update","marginBottom","params","Friends","friends","selectFriend","messages","loading","openemoji","chosenEmoji","socket","sendMessage","socketId","emit","renderCards","chats","chat","handleFrndChat","unread","singleChat","singleMessages","onChangeHandler","file","fileName","handleClickEmoji","handleClickAwayEmoji","onEmojiClick","emojiObject","emoji","allFriends","io","on","userId","cursor","action","subheader","Date","createdAt","toLocaleDateString","toLocaleTimeString","Tooltip","Fab","size","marginRight","indexOf","controls","autoPlay","Portal","chatReducer","friendId","root1","transform","allMessage","setOpenEmoji","openSearchDialog","setopenSearchDialog","selectedGroup","setLoading","setMessages","handleCloseSearch","sendGroupRequest","setTimeout","useEffect","concat","openChatting","groups","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","owner","phtoURL","typetype","App","path","Login","exact","Profile","resetPassword","Groups","initalstate","localStorage","getItem","JSON","parse","userReducer","Object","assign","setItem","stringify","removeItem","newState1","initialState","ChatReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7dd7f2d2.chunk.js","sourcesContent":["import { LOGIN, LOGOUT, REGISTER, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD } from '../type';\r\nimport axios from 'axios';\r\n\r\nexport const registerUser = (user) => async dispatch => {\r\n    console.log(user)\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append(\"firstName\", user.firstName);\r\n        formData.append(\"lastName\", user.lastName);\r\n        formData.append(\"email\", user.email);\r\n        formData.append(\"password\", user.password);\r\n        if (user.photoURL) {\r\n            formData.append(\"photoURL\", user.photoURL, user.photoURL.name);\r\n        }\r\n\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/users/register',\r\n            data: formData,\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                \"Accept\": \"application/json\",\r\n                \"type\": \"formData\"\r\n            }\r\n        }\r\n        );\r\n        console.log(data, \"1234\")\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: {\r\n                error: null,\r\n                info: data\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('adsfasdf', error.response)\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: {\r\n                error: error.response.data.message,\r\n                info: null\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\nexport const loginUser = (user) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/login`,\r\n            data: {\r\n                email: user.email,\r\n                password: user.password\r\n            }\r\n        });\r\n        //console.log(data, \"dfhkgj \")\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: { error: null, user: data, isAuthenticated: true }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    try {\r\n        await axios({\r\n            method: \"delete\",\r\n            url: `/users/logout`\r\n        });\r\n        dispatch({\r\n            type: LOGOUT,\r\n            payload: null\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const allUser = () => async dispatch => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/users/alluser`)\r\n        dispatch({\r\n            type: ALLUSER,\r\n            payload: { users: data }\r\n        })\r\n        //console.log(data)\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const forgotPassword = (user) => async dispatch => {\r\n    //console.log('user',user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/forgotpassword`,\r\n            data: {\r\n                email: user.email\r\n            }\r\n        });\r\n        //console.log(\"data\",data)\r\n        dispatch({\r\n            type: FORGOTPASSWORD,\r\n            payload: { useremail: user.email, info: data.message }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('errtyu', error.response.data)\r\n        dispatch({\r\n            type: FORGOTPASSWORD,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const changePassword = (user) => async dispatch => {\r\n    console.log(\"user\", user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/Changepassword`,\r\n            data: {\r\n                resetToken: user.resetToken,\r\n                password: user.password,\r\n                email: user.email\r\n            }\r\n        });\r\n        console.log(\"data\", data)\r\n        dispatch({\r\n            type: CHANGEPASSWORD,\r\n            payload: { user: data, error: null }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: CHANGEPASSWORD,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null\r\n            }\r\n        })\r\n\r\n    }\r\n}","export const LOGIN = \"LOGIN\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const ALLUSER = 'ALLUSER';\r\nexport const FORGOTPASSWORD = \"FORGOTPASSWORD\";\r\nexport const CHANGEPASSWORD = \"CHANGEPASSWORD\";\r\nexport const REQUEST = \"REQUEST\";\r\nexport const ALLREQUEST = \"ALLREQUEST\";\r\nexport const UPDATEREQUEST = \"UPDATEREQUEST\";\r\nexport const FRIENDS = \"FRIENDS\";\r\nexport const CREATEGROUP = \"CREATEGROUP\";\r\nexport const FINDGROUP = \"FINDGROUP\";\r\nexport const SEARCHUSER = \"SEARCHUSER\";\r\nexport const ALLMESSAGE = \"ALLMESSAGE\";\r\nexport const SINGLECHAT= 'SINGLECHAT';\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../redux/action/user';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    background: '#fff',\r\n    padding: theme.spacing(3),\r\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.userState);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    isSubmitting: false\r\n  });\r\n  const handleChange = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    });\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setState({ ...state, isSubmitting: true });\r\n    await dispatch(loginUser(state));\r\n    setState({ ...state, isSubmitting: false });\r\n    //console.log(user.error);\r\n    if (!user.error) {\r\n      history.push('/home');\r\n    }\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        <img src={Ouricon} alt=\"user\" style={{width:\"100%\"}}/>\r\n        </Typography>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={state.email}\r\n            onChange={(e) => handleChange(\"email\", e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={state.password}\r\n            onChange={(e) => handleChange(\"password\", e.target.value)}\r\n          />\r\n          <Grid item xs style={{ float: \"right\" }}>\r\n            <Link href=\"/forgotPassword\" variant=\"body2\">\r\n              Forgot password?\r\n              </Link>\r\n          </Grid>\r\n          {user.error &&\r\n            <Grid item xs={12} className=\"error\">\r\n              <div className=\"error\">{user.error}</div>\r\n            </Grid>\r\n          }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={state.isSubmitting}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"center\" className=\"mt-2\">\r\n            <Grid item >\r\n              Don't have an account?\r\n              <Link href=\"/register\" variant=\"body2\" className=\"mt-2\">\r\n                {\"Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/action/user';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n    background: '#fff',\r\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.userState);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    firstNameError: \"\",\r\n    lastName: \"\",\r\n    lastNameError: \"\",\r\n    email: \"\",\r\n    emailError: \"\",\r\n    password: \"\",\r\n    passwordError: \"\",\r\n    isSubmitting: false\r\n  });\r\n  const handleChange = (key, value) => {\r\n    const newState = { ...state };\r\n    newState[key] = value;\r\n    if (key === 'firstName') {\r\n      newState.firstNameError = \"\";\r\n      if (!newState.firstName.match(/^[a-z ,.'-]{3,150}$/i)) {\r\n        newState.firstNameError = \"firstName is not valid\"\r\n      }\r\n      if (newState.firstName.trim() === \"\") {\r\n        newState.firstNameError = \"First name is required\"\r\n      }\r\n    }\r\n    if (key === 'lastName') {\r\n      newState.lastNameError = \"\";\r\n      if (!newState.lastName.match(/^[a-z ,.'-]{3,150}$/i)) {\r\n        newState.lastNameError = \"lastName is not valid\"\r\n      }\r\n      if (newState.lastName.trim() === \"\") {\r\n        newState.lastNameError = \"Last name is required\"\r\n      }\r\n    }\r\n    if (key === 'email') {\r\n      newState.emailError = \"\";\r\n      if (!newState.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n        newState.emailError = \"invalid email \"\r\n      }\r\n      if (newState.email.trim() === \"\") {\r\n        newState.emailError = \"email is required\"\r\n      }\r\n    }\r\n    if (key === \"password\") {\r\n      newState.passwordError = \"\";\r\n      if (newState.password.length < 5) {\r\n        newState.passwordError = \"Can not be less than 5\"\r\n      }\r\n      if (newState.password.trim() === \"\") {\r\n        newState.passwordError = \"password is required\"\r\n      }\r\n    }\r\n    setState(newState);\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newState = { ...state };\r\n    if (newState.firstName.trim() === \"\" || newState.firstNameError) {\r\n      newState.firstNameError = newState.firstNameError || \"first name is required\"\r\n      setState(newState)\r\n      return\r\n    }\r\n    if (newState.lastName.trim() === \"\" || newState.lastNameError) {\r\n      newState.lastNameError = newState.lastNameError || \"last name is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n    if (newState.email.trim() === \"\" || newState.emailError) {\r\n      newState.emailError = newState.emailError || \"email is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n    if (newState.password.trim() === \"\" || newState.passwordError) {\r\n      newState.passwordError = newState.passwordError || \"password is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    await dispatch(registerUser(state));\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    if (!user.error) {\r\n      history.push('/');\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(user);\r\n  // }, [user]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\r\n        </Typography>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                value={state.firstName}\r\n                onChange={(e) => handleChange(\"firstName\", e.target.value)}\r\n                error={!!state.firstNameError}\r\n                helperText={state.firstNameError}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={state.lastName}\r\n                onChange={(e) => handleChange(\"lastName\", e.target.value)}\r\n                error={!!state.lastNameError}\r\n                helperText={state.lastNameError}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={state.email}\r\n                onChange={(e) => handleChange(\"email\", e.target.value)}\r\n                error={!!state.emailError}\r\n                helperText={state.emailError}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={state.password}\r\n                onChange={(e) => handleChange(\"password\", e.target.value)}\r\n                error={!!state.passwordError}\r\n                helperText={state.passwordError}\r\n              />\r\n            </Grid>\r\n            <Grid>\r\n              <input accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(\"photoURL\", e.target.files[0])} />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </Grid>\r\n            {user.error &&\r\n              <Grid item xs={12}>\r\n                <div className=\"error\">{user.error}</div>\r\n              </Grid>\r\n            }\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={state.isSubmitting}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\" className=\"mt-2\">\r\n            <Grid item>\r\n              Already have an account?\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { forgotPassword } from '../redux/action/user';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: '#fff',\r\n        padding: theme.spacing(3),\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst SignIn = (props) => {\r\n    const classes = useStyles();\r\n    //const user = useSelector(state => state.userState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        isSubmitting: false\r\n    });\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    const reset = async (e) => {\r\n        console.log('state',state)\r\n        e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n        await dispatch(forgotPassword(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        console.log(props.useremail.error)\r\n        if (!props.useremail.error) {\r\n            history.push('/Resetpassword/'+state.email);\r\n        }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Forgot Password\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={reset}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={state.email}\r\n                        onChange={(e) => handleChange(\"email\", e.target.value)}\r\n                    />\r\n                    <Grid>\r\n                        <div className=\"error\">\r\n                            {props.useremail.error}\r\n                        </div>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={state.isSubmitting}\r\n                    >\r\n                        Send Reset Link\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            Back to\r\n              <Link href=\"/\" variant=\"body2\" className=\"mt-2\">\r\n                                {\" Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        useremail: state.userState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { forgotPassword })(SignIn);","import { CREATEGROUP, FINDGROUP, SEARCHUSER } from \"../type\";\r\nimport axios from 'axios';\r\n\r\nexport const createGroup = (group) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/group',\r\n            data: {\r\n                groupName: group.groupName,\r\n                photoURL: group.photoURL\r\n            },\r\n        }\r\n        );\r\n        dispatch({\r\n            type: CREATEGROUP,\r\n            payload: {\r\n                error: null,\r\n                group: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: CREATEGROUP,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const findGroups = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/group/find`);\r\n        dispatch({\r\n            type: FINDGROUP,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: FINDGROUP,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const searchUser = (searchQuery) => async dispatch => {\r\n    try {\r\n        //console.log(searchQuery)\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/users/search',\r\n            data: searchQuery\r\n        }\r\n        );\r\n        //console.log(data)\r\n        dispatch({\r\n            type: SEARCHUSER,\r\n            payload: { searchQuery: data }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: SEARCHUSER,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                payload: null\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../redux/action/user';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\nimport { searchUser } from '../redux/action/group';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport { Card, Avatar, CardHeader } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        height: \"70px\"\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    menuLogo: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    user: {\r\n        textTransform: 'uppercase',\r\n        background: '#fff',\r\n        color: '#000',\r\n        borderRadius: '50%',\r\n        width: '38px',\r\n        height: '38px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontSize: '1.3rem'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '500px'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    rootclick: {\r\n        position: 'relative',\r\n    },\r\n    dropdown: {\r\n        position: 'absolute',\r\n        top: 28,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: \"grey\",\r\n        color: \"black\"\r\n    },\r\n\r\n}));\r\n\r\nfunction MiniDrawer(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [openClick, setopenClick] = React.useState(false);\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [state, setState] = useState({\r\n        searchQuery: '',\r\n        searchQueryResult: null\r\n    })\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setopenClick(false);\r\n        setState({\r\n            ...state, searchQuery: ''\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const logoutUser = async () => {\r\n        await props.logout();\r\n        history.push(\"/\");\r\n    }\r\n    const handleChangeSearch = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmitSearch = async (e) => {\r\n        e.preventDefault();\r\n        setopenClick((prev) => !prev);\r\n        await props.searchUser({\r\n            searchQuery: state.searchQuery\r\n        });\r\n        //console.log(\"props\", props.group.searchQuery);\r\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar style={{ justifyContent: 'space-between' }}>\r\n                    <div className={classes.menuLogo}>\r\n                        <Typography variant=\"h6\" noWrap style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}>\r\n                            <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\r\n                        </Typography>\r\n                        <form className={classes.search} style={{ marginLeft: \"100px\" }} onSubmit={handleSubmitSearch}>\r\n                            <div className={classes.searchIcon} >\r\n                                <SearchIcon type=\"submit\" />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                value={state.searchQuery}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\r\n                            />\r\n                            <ClickAwayListener onClickAway={handleClickAway}>\r\n                                <div className={classes.rootclick}>\r\n                                    <div>\r\n                                        {\r\n                                            openClick ? (\r\n                                                <div className={classes.dropdown} >\r\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\" >\r\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\r\n                                                            <Grid item key={item._id} >\r\n                                                                <div style={{ color: \"white\" }}>\r\n                                                                    We have this user.\r\n                                                                </div>\r\n                                                                <Card>\r\n                                                                    <CardHeader\r\n                                                                        avatar={\r\n                                                                            <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                                        }\r\n                                                                        title={item.firstName + \" \" + item.lastName}\r\n                                                                    />\r\n                                                                </Card>\r\n                                                            </Grid>\r\n                                                        ))}\r\n                                                    </Grid>\r\n                                                </div>\r\n                                            ) : null}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </ClickAwayListener>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {props.user &&\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <div>\r\n\r\n                                </div>\r\n                                {props.user.photoURL ? <img src={props.user.photoURL} alt={props.user.firstName} className={classes.user} />\r\n                                    : <span className={classes.user} style={{ padding: 4 }}>\r\n                                        {props.user.firstName[0]}{props.user.lastName[0]}\r\n                                    </span>\r\n                                }\r\n                            </IconButton>\r\n\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}><Link to=\"/profile\" style={{ color: \"black\", textDecoration: \"none\" }}>Profile</Link></MenuItem>\r\n\r\n                                <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button>\r\n                        <Link to=\"/home\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <Link to=\"/friend\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon>\r\n                                <PersonIcon />\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <Link to=\"/group\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon>\r\n                                <PeopleAltIcon />\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userState.user,\r\n        isAuth: state.isAuthenticated,\r\n        group: state.groupReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { logout, searchUser })(MiniDrawer);","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const sendRequest = (user) => async dispatch => {\r\n    console.log(user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/request',\r\n            data: user,\r\n        }\r\n        );\r\n        //console.log('data',data)\r\n\r\n        dispatch({\r\n            type: REQUEST,\r\n            payload: {\r\n                error: null,\r\n                request: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: REQUEST,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                request: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const allRequest = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/request/all`);\r\n        dispatch({\r\n            type: ALLREQUEST,\r\n            payload: { requests: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const updatetRequest = (friend) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"put\",\r\n            url: '/request/update',\r\n            data: friend,\r\n        }\r\n        );\r\n        //console.log(data)\r\n        dispatch({\r\n            type: UPDATEREQUEST,\r\n            payload: {\r\n                error: null,\r\n                update: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: UPDATEREQUEST,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                request: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const allFriends = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/users/friend`);\r\n        //console.log('data', data)\r\n        dispatch({\r\n            type: FRIENDS,\r\n            payload: { friends: data }\r\n        })\r\n        //console.log(data)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/header';\r\nimport { connect } from 'react-redux';\r\nimport { allUser } from '../redux/action/user';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport { sendRequest, allRequest, updatetRequest } from '../redux/action/request';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        users: null,\r\n        snackbarOpen: false,\r\n        snackbarMessage: \"\",\r\n        snackbarSeverity: \"success\"\r\n    }\r\n    async componentDidMount() {\r\n        if (!this.props.userState.users) {\r\n            await this.props.allUser();\r\n        }\r\n        await this.props.allRequest();\r\n        this.setState({\r\n            users: this.props.userState.users,\r\n        })\r\n        //console.log(this.props.request.requests)\r\n        await this.props.updatetRequest();\r\n        //console.log(this.props.userState.user.id, \"user\")\r\n    }\r\n\r\n    connect = async (receiver) => {\r\n        await this.props.sendRequest({\r\n            receiver: receiver,\r\n            sender: this.props.userState.user.id\r\n        });\r\n        // console.log('message',this.props.request.error);\r\n        if (this.props.request.error) {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.error,\r\n                snackbarSeverity: 'error'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.request.message\r\n            })\r\n\r\n        }\r\n    }\r\n    acceptGroupRequest = async (id, groupId) => {\r\n        await this.props.updatetRequest({\r\n            isAccepted: true,\r\n            id,\r\n            groupId\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Accept request successfully\"\r\n        });\r\n        await this.props.allRequest();\r\n    }\r\n    Accept = async (id, friend) => {\r\n        await this.props.updatetRequest({\r\n            isAccepted: true,\r\n            id,\r\n            friend\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Accept request successfully\"\r\n        });\r\n        await this.props.allRequest();\r\n\r\n    }\r\n    Reject = async (id) => {\r\n        await this.props.updatetRequest({\r\n            isReject: true,\r\n            id\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Reject request successfully\",\r\n            snackbarSeverity: 'error'\r\n        })\r\n        await this.props.allRequest();\r\n\r\n    }\r\n\r\n\r\n\r\n    showSnackbar = () => {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            open={this.state.snackbarOpen}\r\n            onClose={() => { this.setState({ snackbarOpen: false }) }}\r\n            autoHideDuration={3000}\r\n        >\r\n            <MuiAlert severity={this.state.snackbarSeverity} variant=\"filled\">\r\n                {this.state.snackbarMessage}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"backgrnd-home\" style={{ marginLeft: \"100px\" }}>\r\n                <Header />\r\n                {this.state.users ?\r\n                    <div className=\"row\">\r\n                        <Grid container >\r\n                            <Grid container item spacing={3} xs={12} sm={9}>\r\n                                {this.state.users && this.state.users.map((item) => (\r\n                                    <Grid item xs={12} sm={4} key={item._id}>\r\n                                        <Card style={{ maxWidth: \"200px\" }} className=\"col-2\">\r\n                                            <CardMedia\r\n                                                className=\"user-image\"\r\n                                                component=\"img\"\r\n                                                image={item.photoURL || userimage}\r\n                                                title=\"user iamge\"\r\n                                            />\r\n                                            <CardActions style={{ justifyContent: 'center', flexDirection: 'column' }}>\r\n                                                <Typography style={{ fontWeight: \"bold\" }}>\r\n                                                    {item.firstName + \" \" + item.lastName}\r\n                                                </Typography>\r\n                                                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.connect(item._id)}>connect</Button>\r\n                                            </CardActions>\r\n\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <Paper style={{ padding: '5px 5px 20px 5px' }}>\r\n                                    <div style={{ textAlign: \"center\", maxWidth: \"300px\" }} >\r\n                                        <h3>Requests</h3>\r\n                                        {this.props.request.requests && this.props.request.requests.map((item) => (\r\n                                            <Card style={{ display: \"flex\", margin: \"10px\" }} key={item._id}>\r\n                                                {item.sender &&\r\n                                                    <>\r\n                                                        <Grid item xs={3} style={{ float: \"left\" }}>\r\n                                                            <img alt=\"user\" src={item.sender.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"10px\" }}>\r\n                                                            {item.sender.firstName + \" \" + item.sender.lastName}\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                            <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.Accept(item._id, item.sender._id)}>\r\n                                                                <CheckIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\r\n                                                                <ClearIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                }\r\n                                                {item.groupId &&\r\n                                                    <>\r\n                                                        <Grid item xs={3} style={{ float: \"left\" }}>\r\n                                                            <img alt=\"user\" src={item.groupId.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"10px\" }}>\r\n                                                            {item.groupId.groupName}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                            <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.acceptGroupRequest(item._id, item.groupId._id)}>\r\n                                                                <CheckIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\r\n                                                                <ClearIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                }\r\n                                            </Card>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    : <div className=\"loader\">\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n                {this.showSnackbar()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        userState: state.userState,\r\n        request: state.requestReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { allUser, sendRequest, allRequest, updatetRequest })(Home);","import React from 'react';\r\nimport Header from '../components/header';\r\nimport { connect } from 'react-redux';\r\nconst Profile = (props) => {\r\n\r\n    return props.user && (\r\n        <div>\r\n            <Header />\r\n            <main  className=\"backgrnd\" style={{ marginLeft: \"100px\", textAlign: \"center\" ,marginTop:\"50px \"}} >\r\n                <div style={{ marginBottom: \"40px\" }}>\r\n                    {props.user && props.user.photoURL ? <img src={props.user.photoURL} style={{ borderRadius: \"50%\", width: \"50%\", height: \"50%\" }} alt={props.user.firstName} />\r\n                        : <span style={{ background: \"gray\", borderRadius: \"50%\", width: \"50%\", height: \"50%\", padding: \"40px\", color: \"#000\", fontSize: \"50px\", textTransform: \"uppercase\" }}>\r\n                            {props.user.firstName[0]}{props.user.lastName[0]}\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <h3>\r\n                    Name: {props.user.firstName + \" \" + props.user.lastName}\r\n                </h3>\r\n                <h3>\r\n                    Email: {props.user.email}\r\n                </h3>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"pro\", state)\r\n    return {\r\n        user: state.userState.user,\r\n        isAuth: state.isAuthenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { changePassword } from '../redux/action/user';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: '#fff',\r\n        padding: theme.spacing(3),\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Resetpassword = (props) => {\r\n    const classes = useStyles();\r\n   // const user = useSelector(state => state.userState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        resetToken: \"\",\r\n        password: \"\",\r\n        isSubmitting: false,\r\n        email: props.match.params.email\r\n    });\r\n\r\n\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    const reset = async (e) => {\r\n        e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n\r\n        await dispatch(changePassword(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        if (!props.user.error) {\r\n            history.push('/');\r\n        }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Reset Password\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={reset}>\r\n                    <Grid>\r\n                        <h2> {props.match.params.email}</h2>\r\n                    </Grid>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"resetToken\"\r\n                        label=\"resetToken\"\r\n                        type=\"resetToken\"\r\n                        id=\"resetToken\"\r\n                        autoComplete=\"resetToken\"\r\n                        value={state.resetToken}\r\n                        onChange={(e) => handleChange(\"resetToken\", e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={state.password}\r\n                        onChange={(e) => handleChange(\"password\", e.target.value)}\r\n                    />\r\n                    <Grid>\r\n                    <div className=\"error\">\r\n                            {props.user.error}\r\n                        </div>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change Password\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            Back to\r\n              <Link href=\"/\" variant=\"body2\" className=\"mt-2\">\r\n                                {\" Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        user: state.userState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { changePassword })(Resetpassword);","import React, { Component } from 'react';\r\nimport Header from '../components/header';\r\nimport { allFriends } from '../redux/action/request';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar, CardHeader, Fab } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport * as io from 'socket.io-client';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { singleChat } from '../redux/action/chat';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Portal from '@material-ui/core/Portal';\r\nimport Picker from 'emoji-picker-react';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nclass Friends extends Component {\r\n    state = {\r\n        friends: null,\r\n        selectFriend: null,\r\n        message: \"\",\r\n        messages: [],\r\n        user: this.props.user.user,\r\n        loading: false,\r\n        openemoji: false,\r\n        chosenEmoji: null\r\n    }\r\n    socket = null;\r\n    async componentDidMount() {\r\n        await this.props.allFriends();\r\n        // console.log(this.props)\r\n        await this.setState({ friends: this.props.friend.friends.friends });\r\n        //  console.log(this.state.friends);\r\n        this.socket = io(\"/\");\r\n        this.socket.emit('user-join', this.props.user.user.id);\r\n        this.socket.on('user-join', async (data) => {\r\n            const friends = [...this.state.friends];\r\n            for (let friend of friends) {\r\n                friend.unread = 0;\r\n                if (friend._id === data.userId) {\r\n                    friend.socketId = data.socketId\r\n                }\r\n            }\r\n            await this.setState({ friends });\r\n        });\r\n        this.socket.on('one-2-one', (data) => {\r\n            if ((data.sender === this.state.user.id) || (this.state.selectFriend && this.state.selectFriend._id === data.sender)) {\r\n                const messages = [...this.state.messages];\r\n                messages.push(data);\r\n                this.setState({ messages });\r\n            } else {\r\n                const friends = [...this.state.friends];\r\n                for (let friend of friends) {\r\n                    if (friend._id === data.sender) {\r\n                        friend.unread = friend.unread ? friend.unread + 1 : 1;\r\n                    }\r\n                }\r\n                this.setState({ friends });\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\r\n            photoURL: this.state.user.photoURL || null,\r\n            sender: this.state.user.id,\r\n            message: this.state.message,\r\n            socketId: this.state.selectFriend.socketId,\r\n            receiver: this.state.selectFriend._id\r\n        }\r\n        //console.log(this.socket.id);\r\n        //console.log(message);\r\n        if (this.state.message) {\r\n            this.socket.emit('one-2-one', message);\r\n            this.setState({\r\n                ...this.state,\r\n                message: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleSave(files) {\r\n        //Saving files to state for further use and closing Modal.\r\n        this.setState({\r\n            files: files,\r\n            open: false\r\n        });\r\n        console.log(files)\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    }\r\n\r\n    // hanleSearchChange = (e) => {\r\n    //     this.setState({\r\n    //         chatMessage: e.target.value\r\n    //     })\r\n    // }\r\n    renderCards = () => {\r\n        console.log(\"inside renderrrr\", this.props.chats)\r\n        this.props.chats.chats\r\n            && this.props.chats.chats.chats.map((chat) => (\r\n                {/*<ChatCard  key={chat._id}  {...chat} />*/ }\r\n            ));\r\n    }\r\n    handleFrndChat = async (item) => {\r\n        //console.log(item)\r\n        item.unread = 0;\r\n        await this.setState({\r\n            selectFriend: item\r\n        });\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        await this.props.singleChat(item._id);\r\n        //console.log(this.props.chats.singleMessages)\r\n        this.setState({\r\n            messages: this.props.chats.singleMessages\r\n        })\r\n        this.setState({\r\n            loading: false\r\n        });\r\n\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        console.log(event.target.files[0]);\r\n        const message = {\r\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\r\n            photoURL: this.state.user.photoURL || null,\r\n            sender: this.state.user.id,\r\n            file: event.target.files[0],\r\n            fileName: event.target.files[0].name,\r\n            type: event.target.files[0].type,\r\n            socketId: this.state.selectFriend.socketId,\r\n            receiver: this.state.selectFriend._id\r\n        }\r\n        this.socket.emit('single-fileupload', message);\r\n    }\r\n\r\n    handleClickEmoji = () => {\r\n        this.setState({\r\n            openemoji: true\r\n        })\r\n    };\r\n\r\n    handleClickAwayEmoji = () => {\r\n        this.setState({\r\n            openemoji: false\r\n        })\r\n        // setOpenEmoji(false);\r\n    };\r\n\r\n    onEmojiClick = async (event, emojiObject) => {\r\n        // this.setState(emojiObject);\r\n        //console.log(emojiObject.emoji)\r\n        await this.setState({\r\n            ...this.state, message: this.state.message + emojiObject.emoji\r\n        })\r\n        this.setState({\r\n            chosenEmoji: false\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }}>\r\n                <Header />\r\n                {this.state.friends ?\r\n                    <Grid container >\r\n                        <Grid item sm={3} >\r\n                            <div className=\"friend-list\">\r\n                                <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n                                    {this.state.friends && this.state.friends.map((item) => (\r\n                                        <Grid item key={item._id} style={{ margin: '10px 0' }}>\r\n                                            <Card className=\"backgrnd\" onClick={() => this.handleFrndChat(item)} style={this.state.selectFriend && this.state.selectFriend._id === item._id ? { backgroundColor: '#bbb' } : { cursor: 'pointer' }}>\r\n                                                <CardHeader\r\n                                                    avatar={\r\n                                                        <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                    }\r\n                                                    title={item.firstName + \" \" + item.lastName}\r\n                                                    action={\r\n                                                        <span className='unread'>\r\n                                                            {item.unread > 0 && item.unread}\r\n                                                        </span>\r\n                                                    }\r\n                                                    subheader={new Date(item.createdAt).toLocaleDateString() + ' ' + new Date(item.createdAt).toLocaleTimeString()}\r\n                                                />\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))}\r\n                                </Grid>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={9}>\r\n                            {!this.state.selectFriend ?\r\n                                <div>\r\n                                    <h1>Click on any friend to start conversation.</h1>\r\n                                </div>\r\n                                :\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                    <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\r\n                                        <Toolbar>\r\n                                            <Typography variant=\"h6\" className=\"title\" noWrap>\r\n                                                <CardHeader\r\n                                                    avatar={\r\n                                                        <Avatar alt=\"user\" src={this.state.selectFriend.photoURL || userimage} />\r\n                                                    }\r\n                                                    title={this.state.selectFriend.firstName + ' ' + this.state.selectFriend.lastName}\r\n                                                />\r\n                                            </Typography>\r\n                                            <Tooltip title=\"Share documents\" aria-label=\"add\">\r\n                                                <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\r\n                                                    <input accept=\"image/*,video/*,application/pdf\" className='input' id=\"icon-button-file\" type=\"file\" onChange={this.onChangeHandler} />\r\n                                                    <label htmlFor=\"icon-button-file\" >\r\n                                                        <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <AttachmentIcon />\r\n                                                        </IconButton>\r\n                                                    </label>\r\n                                                </Fab>\r\n                                            </Tooltip>\r\n                                        </Toolbar>\r\n                                    </AppBar>\r\n                                    <div className=\"chat-box\">\r\n                                        <Grid className=\"messages\">\r\n                                            {this.state.loading && <div className=\"loader\"><CircularProgress /></div>}\r\n                                            {this.state.messages.map(item => (\r\n                                                <Grid item xs={12} key={item._id} style={{ padding: '8px' }}>\r\n                                                    <div className=\"message\">\r\n                                                        <Avatar className=\"message-photo\" src={item.photoURL || userimage} alt=\"message\" />\r\n                                                        <div className=\"message-name\">{item.name}</div>\r\n                                                    </div>\r\n                                                    {item.file ?\r\n                                                        <>\r\n                                                            {item?.type.indexOf('video') !== -1 ?\r\n                                                                <video width=\"320\" height=\"240\" controls autoPlay>\r\n                                                                    <source src={`/uploads/${item.file}`} type={item.type} />\r\n                                                                </video>\r\n                                                                :\r\n                                                                item?.type.indexOf('pdf') !== -1 || item?.type.indexOf('text') !== -1 ?\r\n                                                                    <div className=\"message-content\">\r\n                                                                        <a className=\"send-link\" target=\"_blank\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\r\n                                                            }\r\n                                                        </>\r\n                                                        :\r\n                                                        <div className=\"message-content\">{item.message}</div>\r\n                                                    }\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                        <form className=\"message-form\" onSubmit={this.sendMessage}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={1} sm={1}>\r\n                                                    <div>\r\n                                                        <ClickAwayListener onClickAway={this.handleClickAwayEmoji}>\r\n                                                            <div>\r\n                                                                <InsertEmoticonIcon onClick={this.handleClickEmoji} style={{ cursor: \"pointer\" }} />\r\n                                                                {this.state.openemoji ? (\r\n                                                                    <Portal>\r\n                                                                        <div className=\"emoji-class\">\r\n                                                                            <Picker onEmojiClick={this.onEmojiClick} />\r\n                                                                        </div>\r\n                                                                    </Portal>\r\n                                                                ) : null}\r\n                                                            </div>\r\n                                                        </ClickAwayListener>\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={9} sm={10}>\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        name=\"message\"\r\n                                                        variant=\"outlined\"\r\n                                                        autoComplete=\"off\"\r\n                                                        size=\"small\"\r\n                                                        value={this.state.message}\r\n                                                        onChange={(e) => this.setState({ message: e.target.value })}\r\n                                                    />\r\n                                                </Grid >\r\n                                                <Grid item xs={2} sm={1}>\r\n                                                    <Fab style={{\r\n                                                        width: \"40px\",\r\n                                                        height: \"40px\"\r\n                                                    }} type=\"submit\"><SendIcon /></Fab>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </form>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            }\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    : <div className='loader'>\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"state11\", state)\r\n    //console.log(\"chat\", state.singleChatReducer)\r\n    return {\r\n        friend: state.requestReducer,\r\n        user: state.userState,\r\n        chats: state.chatReducer\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { allFriends, singleChat })(Friends);","import { ALLMESSAGE, SINGLECHAT } from '../type';\r\nimport axios from 'axios';\r\nexport const allMessage = (groupId) => async (dispatch) => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/chat/${groupId}`);\r\n        dispatch({\r\n            type: ALLMESSAGE,\r\n            payload: { messages: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: ALLMESSAGE,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const singleChat = (friendId) => async (dispatch) => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/chat/single/${friendId}`);\r\n        dispatch({\r\n            type: SINGLECHAT,\r\n            payload: { singleMessages: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: SINGLECHAT,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Header from '../components/header';\r\nimport { connect } from 'react-redux';\r\nimport { createGroup, findGroups, searchUser } from '../redux/action/group';\r\nimport { allMessage } from '../redux/action/chat';\r\nimport { useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport { Card, Avatar, CardHeader, Fab } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { sendRequest } from '../redux/action/request';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport * as io from 'socket.io-client';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Picker from 'emoji-picker-react';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Portal from '@material-ui/core/Portal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\"\r\n    },\r\n    root1: {\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    dropdown: {\r\n        position: 'fixed',\r\n        width: 200,\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    }\r\n}));\r\n\r\nconst Group = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [openemoji, setOpenEmoji] = React.useState(false);\r\n\r\n    const handleClickEmoji = () => {\r\n        setOpenEmoji((prev) => !prev);\r\n    };\r\n\r\n    const handleClickAwayEmoji = () => {\r\n        setOpenEmoji(false);\r\n    };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openSearchDialog, setopenSearchDialog] = React.useState(false)\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        groupName: null,\r\n        isSubmitting: null,\r\n        photoURL: null,\r\n        searchQuery: null,\r\n        searchQueryResult: null,\r\n        selectedGroup: null,\r\n        snackbarOpen: false,\r\n        snackbarMessage: \"\",\r\n        snackbarSeverity: \"success\",\r\n        user: props.userState.user,\r\n        message: \"\"\r\n    });\r\n\r\n    //const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const onEmojiClick = async (event, emojiObject) => {\r\n        // setChosenEmoji(emojiObject);\r\n        //console.log(emojiObject)\r\n        await setState({\r\n            ...state, message: state.message + emojiObject.emoji\r\n        })\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [messages, setMessages] = useState([]);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const socket = io(\"/\");\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClickOpenSearch = () => {\r\n        setopenSearchDialog(true);\r\n    };\r\n    const handleCloseSearch = () => {\r\n        setopenSearchDialog(false);\r\n    };\r\n\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        // e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n        await dispatch(createGroup(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        props.findGroups();\r\n        setOpen(false);\r\n    }\r\n    const handleChangeSearch = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n    const handleSubmitSearch = async (e) => {\r\n        await props.searchUser({\r\n            searchQuery: state.searchQuery\r\n        });\r\n        //console.log(\"props\", props.group.searchQuery);\r\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\r\n    };\r\n    const sendGroupRequest = async (receiver) => {\r\n        await props.sendRequest({\r\n            receiver: receiver,\r\n            groupId: state.selectedGroup._id\r\n        });\r\n        if (props.request.error) {\r\n            setState({\r\n                ...state,\r\n                snackbarOpen: true,\r\n                snackbarMessage: props.request.error,\r\n                snackbarSeverity: 'error'\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                snackbarOpen: true,\r\n                snackbarMessage: props.request.request.message\r\n            })\r\n\r\n        }\r\n        setopenSearchDialog(false);\r\n        setTimeout(() => {\r\n            setState({\r\n                ...state,\r\n                selectedGroup: state.selectedGroup\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(findGroups());\r\n        //console.log(props)\r\n    }, [dispatch]);\r\n\r\n    socket.on('message', (data) => {\r\n        setMessages(messages => messages.concat(data))\r\n    })\r\n\r\n    const openChatting = async (item) => {\r\n        //console.log(item)\r\n        setState({\r\n            ...state, selectedGroup: item,\r\n        });\r\n        setLoading(true)\r\n        await props.allMessage(item._id);\r\n        setMessages(props.chat.messages)\r\n        setLoading(false);\r\n        socket.emit('join', item._id);\r\n    }\r\n\r\n\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            name: state.user.firstName + \" \" + state.user.lastName,\r\n            photoURL: state.user.photoURL || null,\r\n            sender: state.user.id,\r\n            message: state.message,\r\n            groupId: state.selectedGroup._id,\r\n        }\r\n        if (state.message) {\r\n            socket.emit('message', message);\r\n            setState({\r\n                ...state,\r\n                message: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const onChangeHandler = (event) => {\r\n        console.log(event.target.files[0]);\r\n        const message = {\r\n            name: state.user.firstName + \" \" + state.user.lastName,\r\n            photoURL: state.user.photoURL || null,\r\n            sender: state.user.id,\r\n            file: event.target.files[0],\r\n            type: event.target.files[0].type,\r\n            fileName: event.target.files[0].name,\r\n            groupId: state.selectedGroup._id,\r\n        }\r\n        console.log(state)\r\n        socket.emit('fileupload', message);\r\n    }\r\n\r\n    const showSnackbar = () => {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            open={state.snackbarOpen}\r\n            onClose={() => { setState({ snackbarOpen: false }) }}\r\n            autoHideDuration={3000}\r\n        >\r\n            <MuiAlert severity={state.snackbarSeverity} variant=\"filled\">\r\n                {state.snackbarMessage}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }} >\r\n            <Header />\r\n            {props.group.groups ?\r\n                <Grid container>\r\n                    <Grid item sm={3} style={{ marginTop: \"25px\" }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Create a New Group\r\n      </Button>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">New Group</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To create a new group\r\n          </DialogContentText>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"Group name\"\r\n                                    label=\" Group name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    required\r\n                                    onChange={(e) => handleChange(\"groupName\", e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    id=\"group logo\"\r\n                                    label=\" Group logo\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    required\r\n                                    onChange={(e) => handleChange(\"photoURL\", e.target.value)}\r\n                                />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n          </Button>\r\n                                <Button onClick={handleSubmit} disabled={state.isSubmitting || !(state.photoURL && state.groupName)} color=\"primary\">\r\n                                    Done\r\n          </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        <div className=\"group-list\">\r\n                            <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n                                {props.group.groups && props.group.groups.map((item) => (\r\n                                    <Grid item key={item._id} style={{ margin: '10px 0' }}>\r\n                                        <Card onClick={() => openChatting(item)} style={state.selectedGroup && state.selectedGroup._id === item._id ? { backgroundColor: '#ccc' } : { cursor: 'pointer' }}>\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                }\r\n                                                title={item.groupName}\r\n                                                subheader={new Date(item.createdAt).toLocaleDateString() + ' ' + new Date(item.createdAt).toLocaleTimeString()}\r\n                                            />\r\n                                        </Card>\r\n\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={9} >\r\n                        {!state.selectedGroup ?\r\n                            <div>\r\n                                <h1>\r\n                                    Click on any group for chatting.\r\n                            </h1>\r\n                            </div>\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\r\n                                    <Toolbar>\r\n                                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar alt=\"user\" src={state.selectedGroup.photoURL || userimage} />\r\n                                                }\r\n                                                title={state.selectedGroup.groupName}\r\n                                            />\r\n                                        </Typography>\r\n                                        <div >\r\n                                            <Tooltip title=\"Share documents\" aria-label=\"add\">\r\n                                                <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\r\n                                                    <input accept=\"image/*,video/*,application/pdf\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={onChangeHandler} />\r\n                                                    <label htmlFor=\"icon-button-file\" >\r\n                                                        <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <AttachmentIcon />\r\n                                                        </IconButton>\r\n                                                    </label>\r\n                                                </Fab>\r\n                                            </Tooltip>\r\n                                            {state.user.id === state.selectedGroup.owner &&\r\n                                                <Tooltip title=\"Add member\" aria-label=\"add\">\r\n                                                    <Fab size=\"small\" onClick={handleClickOpenSearch}>\r\n                                                        <PersonAddIcon />\r\n                                                    </Fab>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            <Dialog open={openSearchDialog} onClose={handleCloseSearch} aria-labelledby=\"form-dialog-title\">\r\n                                                <DialogTitle id=\"form-dialog-title\">Search User</DialogTitle>\r\n                                                <DialogContent>\r\n                                                    <TextField\r\n                                                        autoFocus\r\n                                                        margin=\"dense\"\r\n                                                        id=\"search\"\r\n                                                        label=\"Search\"\r\n                                                        type=\"text\"\r\n                                                        fullWidth\r\n                                                        onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\r\n                                                    />\r\n                                                </DialogContent>\r\n                                                <DialogActions>\r\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\">\r\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\r\n                                                            <Grid item key={item._id}>\r\n                                                                <Tooltip title=\"click for send request\" aria-label=\"add\" style={{ cursor: 'pointer' }}>\r\n                                                                    <Card onClick={() => sendGroupRequest(item._id)}>\r\n                                                                        <CardHeader\r\n                                                                            avatar={\r\n                                                                                <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                                            }\r\n                                                                            title={item.firstName + \" \" + item.lastName}\r\n                                                                        />\r\n                                                                    </Card>\r\n                                                                </Tooltip>\r\n                                                            </Grid>\r\n                                                        ))}\r\n                                                    </Grid>\r\n\r\n                                                </DialogActions>\r\n                                                <DialogActions>\r\n                                                    <Button onClick={handleCloseSearch} color=\"primary\">\r\n                                                        Cancel\r\n                                            </Button>\r\n                                                    <Button onClick={handleSubmitSearch} color=\"primary\">\r\n                                                        Search\r\n                                            </Button>\r\n                                                </DialogActions>\r\n                                            </Dialog>\r\n                                        </div>\r\n                                    </Toolbar>\r\n                                </AppBar>\r\n                                <div className=\"chat-box\">\r\n                                    <Grid className=\"messages\">\r\n                                        {loading && <div className={classes.root1}><CircularProgress /></div>}\r\n                                        {messages && messages.map(item => (\r\n                                            <Grid item xs={12} key={item._id} style={{ padding: '8px' }}>\r\n                                                <div className=\"message\">\r\n                                                    <Avatar className=\"message-photo\" src={item.phtoURL || userimage} alt=\"message\" />\r\n                                                    <div className=\"message-name\">{item.name}</div>\r\n                                                </div>\r\n                                                {item.file ?\r\n                                                    <>\r\n                                                        {item?.type.indexOf('video') !== -1 ?\r\n                                                            <video width=\"320\" height=\"240\" controls autoPlay>\r\n                                                                <source src={`/uploads/${item.file}`} type={item.typetype} />\r\n                                                            </video>\r\n                                                            :\r\n                                                            item?.type.indexOf('pdf') !== -1 || item?.type.indexOf('text') !== -1 ?\r\n                                                                <div className=\"message-content\">\r\n                                                                    <a className=\"send-link\" target=\"_blank\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\r\n                                                                </div>\r\n                                                                :\r\n                                                                <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <div className=\"message-content\">{item.message}</div>\r\n                                                }\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <form className=\"message-form\" onSubmit={sendMessage}>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} sm={1}>\r\n                                                <div>\r\n                                                    <ClickAwayListener onClickAway={handleClickAwayEmoji}>\r\n                                                        <div>\r\n                                                            <InsertEmoticonIcon onClick={handleClickEmoji} style={{ cursor: \"pointer\" }} />\r\n                                                            {openemoji ? (\r\n                                                                <Portal>\r\n                                                                    <div className={classes.dropdown}>\r\n                                                                        <Picker onEmojiClick={onEmojiClick} />\r\n                                                                    </div>\r\n                                                                </Portal>\r\n                                                            ) : null}\r\n                                                        </div>\r\n                                                    </ClickAwayListener>\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={9} sm={10}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    placeholder=\"type a message \"\r\n                                                    name=\"message\"\r\n                                                    variant=\"outlined\"\r\n                                                    autoComplete=\"off\"\r\n                                                    size=\"small\"\r\n                                                    value={state.message}\r\n                                                    onChange={(e) => setState({ ...state, message: e.target.value })}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2} sm={1}>\r\n                                                <Fab style={{\r\n                                                    width: \"40px\",\r\n                                                    height: \"40px\"\r\n                                                }} type=\"submit\"><SendIcon /></Fab>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                : <div className={classes.root1}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {showSnackbar()}\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.groupReducer.message)\r\n    return {\r\n        userState: state.userState,\r\n        group: state.groupReducer,\r\n        request: state.requestReducer,\r\n        chat: state.chatReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createGroup, findGroups, searchUser, sendRequest, allMessage })(Group);\r\n","import React, { Component } from \"react\";\r\nimport Login from './components/login';\r\nimport Register from './components/register';\r\nimport forgotPassword from './components/forgotPassword';\r\nimport Home from './page/home';\r\n//import Header from './components/header';\r\nimport Profile from './page/profile';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport resetPassword from './components/resetpassword';\r\nimport Friends from './page/friend';\r\nimport Groups from './page/group';\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <Route path=\"/\" component={Login} exact />\r\n                    <Route path=\"/register\" component={Register} exact />\r\n                    <Route path=\"/forgotPassword\" component={forgotPassword} exact />\r\n                    <Route path=\"/home\" component={Home} exact />\r\n                    <Route path=\"/Profile\" component={Profile} exact />\r\n                    <Route path=\"/resetPassword/:email\" component={resetPassword} exact />\r\n                    <Route path=\"/friend\" component={Friends} exact />\r\n                    <Route path=\"/group\" component={Groups} exact />\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import { REGISTER, LOGOUT, LOGIN, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD } from '../type';\r\n\r\nconst initalstate = {\r\n    user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\r\n    isAuthenticated: localStorage.getItem(\"isAuth\") || false,\r\n    info: null,\r\n    error: null,\r\n    users: null,\r\n    useremail: null\r\n}\r\n\r\nconst userReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    //console.log(payload)\r\n    switch (type) {\r\n        case REGISTER:\r\n            const newState = Object.assign(state, payload);\r\n            return newState;\r\n        // return {\r\n        //     ...state, info: payload.info, error: payload.error\r\n        // }\r\n        case LOGIN:\r\n            if (payload.user) {\r\n                localStorage.setItem('user', JSON.stringify(payload.user));\r\n                localStorage.setItem('isAuth', true);\r\n            }\r\n            return Object.assign(state, payload);\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"user\")\r\n            localStorage.removeItem(\"isAuth\")\r\n            return { ...state, user: null, isAuthenticated: false }\r\n        case ALLUSER:\r\n            return Object.assign(state, payload);\r\n        case FORGOTPASSWORD:\r\n            const newState1 = Object.assign(state, payload)\r\n            // console.log(newState1)\r\n            return newState1\r\n        case CHANGEPASSWORD:\r\n            if (payload.user) {\r\n                localStorage.setItem('user', JSON.stringify(payload.user));\r\n            }\r\n            return Object.assign(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default userReducer;","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\r\n\r\nconst initalstate = {\r\n    request: null,\r\n    error: null,\r\n    requests: null,\r\n    update: null,\r\n    friends: null\r\n}\r\n\r\nconst requestReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    //console.log(payload)\r\n    switch (type) {\r\n        case REQUEST:\r\n            const newState = Object.assign(state, payload);\r\n            //console.log(newState)\r\n            return newState;\r\n        case ALLREQUEST:\r\n            return Object.assign(state, payload);\r\n        case UPDATEREQUEST:\r\n            return Object.assign(state, payload);\r\n        case FRIENDS:\r\n            return Object.assign(state, payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default requestReducer;","import { CREATEGROUP, FINDGROUP, SEARCHUSER, ALLMESSAGE } from '../type';\r\n\r\nconst initalstate = {\r\n    group: null,\r\n    error: null,\r\n    info: null,\r\n    groups: null,\r\n    searchQuery: null,\r\n    message: null\r\n}\r\n\r\nconst groupReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case CREATEGROUP:\r\n            return { ...state, group: payload.group, error: payload.error };\r\n        case FINDGROUP:\r\n            return { ...state, groups: payload };\r\n        case SEARCHUSER:\r\n            return Object.assign(state, payload);\r\n        case ALLMESSAGE:\r\n            //console.log('payy', payload)\r\n            return { ...state, message: payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default groupReducer;","import { ALLMESSAGE, SINGLECHAT } from '../type';\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    singleMessages: []\r\n};\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case ALLMESSAGE:\r\n            return Object.assign(state, payload);\r\n        case SINGLECHAT:\r\n            return Object.assign(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ChatReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport userReducer from \"./reducer/user\";\r\nimport requestReducer from './reducer/request';\r\nimport thunk from 'redux-thunk';\r\nimport groupReducer from './reducer/group';\r\nimport chatReducer from './reducer/chat';\r\nconst rootReducer = combineReducers({ userState: userReducer, requestReducer, groupReducer, chatReducer })\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './app';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './style/style.css';\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);","module.exports = __webpack_public_path__ + \"static/media/user.afe9779a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ouricon.c1f7ad7e.jpg\";"],"sourceRoot":""}