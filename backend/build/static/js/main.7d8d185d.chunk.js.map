{"version":3,"sources":["assets/images/user.jpg","redux/action/user.js","redux/type.js","components/login.js","components/register.js","components/forgotPassword.js","redux/action/group.js","components/header.js","redux/action/request.js","page/home.js","page/profile.js","components/resetpassword.js","page/friend.js","redux/action/chat.js","page/group.js","page/userdetail.js","app.js","redux/reducer/user.js","redux/reducer/request.js","redux/reducer/group.js","redux/reducer/chat.js","redux/store.js","index.js","assets/images/ouricon.jpg"],"names":["module","exports","registerUser","user","dispatch","a","formData","FormData","append","firstName","lastName","email","password","photoURL","name","axios","method","url","data","headers","type","payload","error","info","response","message","updateUser","console","log","defaults","withCredentials","token","userId","loginUser","isAuthenticated","allUser","users","forgotPassword","useremail","changePassword","resetToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","background","padding","boxShadow","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useSelector","state","userState","history","useHistory","useDispatch","useState","isSubmitting","setState","handleChange","key","value","handleSubmit","e","preventDefault","push","Container","component","maxWidth","CssBaseline","className","Typography","variant","src","Ouricon","alt","style","onSubmit","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","Grid","item","xs","float","Link","href","Button","color","disabled","container","justify","input","marginBottom","Register","firstNameError","lastNameError","emailError","passwordError","newState","match","trim","length","accept","files","htmlFor","sm","helperText","connect","props","reset","Avatar","createGroup","group","groupName","findGroups","searchUser","searchQuery","root","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","menuLogo","textTransform","borderRadius","fontSize","search","position","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","rootclick","dropdown","right","left","border","borderBottomLeftRadius","borderBottomRightRadius","isAuth","groupReducer","logout","useTheme","React","open","setOpen","openClick","setopenClick","anchorEl","setAnchorEl","searchQueryResult","handleClose","logoutUser","useEffect","handleSubmitSearch","prev","userDetailPage","AppBar","clsx","Toolbar","noWrap","to","textDecoration","cursor","InputBase","placeholder","inputProps","ClickAwayListener","onClickAway","direction","map","_id","onClick","Tooltip","title","aria-label","Card","CardHeader","userimage","IconButton","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","Drawer","Divider","List","ListItem","button","ListItemIcon","minWidth","sendRequest","request","Home","snackbarOpen","snackbarMessage","snackbarSeverity","receiver","sender","acceptGroupRequest","groupId","updatetRequest","isAccepted","allRequest","Accept","friend","Reject","isReject","showSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","this","CardMedia","image","CardActions","fontWeight","Paper","textAlign","requests","CircularProgress","Component","requestReducer","update","backdrop","removeImage","URL","createObjectURL","Backdrop","params","Friends","friends","selectFriend","messages","loading","openemoji","chosenEmoji","messageRef","createRef","socket","sendMessage","socketId","emit","renderCards","chats","chat","handleFrndChat","unread","singleChat","singleMessages","scrollToBottom","onChangeHandler","file","fileName","handleClickEmoji","handleClickAwayEmoji","onEmojiClick","emojiObject","emoji","current","scrollIntoView","allFriends","io","on","action","subheader","Date","updatedAt","toLocaleTimeString","toLocaleDateString","Fab","size","marginRight","ref","indexOf","controls","autoPlay","rel","Portal","chatReducer","friendId","root1","top","transform","allMessage","useRef","setOpenEmoji","openSearchDialog","setopenSearchDialog","selectedGroup","setLoading","setMessages","handleCloseSearch","sendGroupRequest","setTimeout","concat","openChatting","groups","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","createdAt","member","owner","phtoURL","typetype","Details","singleUser","oneuser","md","fr","App","path","exact","Login","Profile","resetPassword","Groups","initalstate","localStorage","getItem","JSON","parse","userReducer","Object","assign","setItem","stringify","removeItem","newState1","initialState","ChatReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d8d185d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.afe9779a.jpg\";","import { LOGIN, LOGOUT, REGISTER, UPDATEUSER, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD, SINGLEUSER } from '../type';\r\nimport axios from 'axios';\r\n\r\nexport const registerUser = (user) => async dispatch => {\r\n    //console.log(user)\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append(\"firstName\", user.firstName);\r\n        formData.append(\"lastName\", user.lastName);\r\n        formData.append(\"email\", user.email);\r\n        formData.append(\"password\", user.password);\r\n        if (user.photoURL) {\r\n            formData.append(\"photoURL\", user.photoURL, user.photoURL.name);\r\n        }\r\n\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/users/register',\r\n            data: formData,\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                \"Accept\": \"application/json\",\r\n                \"type\": \"formData\"\r\n            }\r\n        }\r\n        );\r\n        //console.log(data, \"1234\")\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: {\r\n                error: null,\r\n                info: data\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        //console.log('adsfasdf', error.response)\r\n        dispatch({\r\n            type: REGISTER,\r\n            payload: {\r\n                error: error.response.data.message,\r\n                info: null\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async dispatch => {\r\n    console.log(user)\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const formData = new FormData();\r\n        formData.append(\"firstName\", user.firstName);\r\n        formData.append(\"lastName\", user.lastName);\r\n        formData.append(\"email\", user.email);\r\n        formData.append(\"password\", user.password);\r\n        formData.append(\"token\", user.token)\r\n        if (user.photoURL) {\r\n            formData.append(\"photoURL\", user.photoURL, user.photoURL.name);\r\n        }\r\n\r\n        const { data } = await axios({\r\n            method: 'Put',\r\n            url: `/users/${user.userId}`,\r\n            data: formData,\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n\r\n            }\r\n        }\r\n        );\r\n        console.log(data, \"1234\")\r\n        dispatch({\r\n            type: UPDATEUSER,\r\n            payload: {\r\n                error: null,\r\n                info: data,\r\n                photoURL: data.photoURL\r\n            }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('adsfasdf', error.response)\r\n        dispatch({\r\n            type: UPDATEUSER,\r\n            payload: {\r\n                error: error.response ? error.response.data.message : \"photo error\",\r\n                info: null\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n}\r\nexport const loginUser = (user) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/login`,\r\n            data: {\r\n                email: user.email,\r\n                password: user.password\r\n            }\r\n        });\r\n        //console.log(data, \"dfhkgj \")\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: { error: null, user: data, isAuthenticated: true }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    try {\r\n        await axios({\r\n            method: \"delete\",\r\n            url: `/users/logout`\r\n        });\r\n        dispatch({\r\n            type: LOGOUT,\r\n            payload: null\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const allUser = () => async dispatch => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/users/alluser`)\r\n        dispatch({\r\n            type: ALLUSER,\r\n            payload: { users: data }\r\n        })\r\n        //console.log(data)\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const forgotPassword = (user) => async dispatch => {\r\n    //console.log('user',user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/forgotpassword`,\r\n            data: {\r\n                email: user.email\r\n            }\r\n        });\r\n        //console.log(\"data\",data)\r\n        dispatch({\r\n            type: FORGOTPASSWORD,\r\n            payload: { useremail: user.email, info: data.message }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('errtyu', error.response.data)\r\n        dispatch({\r\n            type: FORGOTPASSWORD,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const changePassword = (user) => async dispatch => {\r\n    console.log(\"user\", user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: `/users/Changepassword`,\r\n            data: {\r\n                resetToken: user.resetToken,\r\n                password: user.password,\r\n                email: user.email\r\n            }\r\n        });\r\n        console.log(\"data\", data)\r\n        dispatch({\r\n            type: CHANGEPASSWORD,\r\n            payload: { user: data, error: null }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: CHANGEPASSWORD,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                info: null\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const singleUser = (id) => async dispatch => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/users/${id}`)\r\n        dispatch({\r\n            type: SINGLEUSER,\r\n            payload: { oneuser: data }\r\n        });\r\n        //console.log(data);\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}","export const LOGIN = \"LOGIN\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const ALLUSER = 'ALLUSER';\r\nexport const FORGOTPASSWORD = \"FORGOTPASSWORD\";\r\nexport const CHANGEPASSWORD = \"CHANGEPASSWORD\";\r\nexport const REQUEST = \"REQUEST\";\r\nexport const ALLREQUEST = \"ALLREQUEST\";\r\nexport const UPDATEREQUEST = \"UPDATEREQUEST\";\r\nexport const FRIENDS = \"FRIENDS\";\r\nexport const CREATEGROUP = \"CREATEGROUP\";\r\nexport const FINDGROUP = \"FINDGROUP\";\r\nexport const SEARCHUSER = \"SEARCHUSER\";\r\nexport const ALLMESSAGE = \"ALLMESSAGE\";\r\nexport const SINGLECHAT = 'SINGLECHAT';\r\nexport const UPDATEUSER = 'UPDATEUSER';\r\nexport const SINGLEUSER = \"SINGLEUSER\";","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../redux/action/user';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    background: '#fff',\r\n    padding: theme.spacing(3),\r\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.userState);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    isSubmitting: false\r\n  });\r\n  const handleChange = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    });\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setState({ ...state, isSubmitting: true });\r\n    await dispatch(loginUser(state));\r\n    setState({ ...state, isSubmitting: false });\r\n    //console.log(user.error);\r\n    if (!user.error) {\r\n      history.push('/');\r\n    }\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\r\n        </Typography>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={state.email}\r\n            onChange={(e) => handleChange(\"email\", e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={state.password}\r\n            onChange={(e) => handleChange(\"password\", e.target.value)}\r\n          />\r\n          <Grid item xs style={{ float: \"right\" }}>\r\n            <Link href=\"/#/forgotPassword\" variant=\"body2\">\r\n              Forgot password?\r\n              </Link>\r\n          </Grid>\r\n          {user.error &&\r\n            <Grid item xs={12} className=\"error\">\r\n              <div className=\"error\">{user.error}</div>\r\n            </Grid>\r\n          }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={state.isSubmitting}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"center\" className=\"mt-2\">\r\n            <Grid item >\r\n              Don't have an account?\r\n              <Link href=\"/#/register\" variant=\"body2\" className=\"mt-2\">\r\n                {\"Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/action/user';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n    background: '#fff',\r\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    marginBottom: \"20px\"\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.userState);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    firstNameError: \"\",\r\n    lastName: \"\",\r\n    lastNameError: \"\",\r\n    email: \"\",\r\n    emailError: \"\",\r\n    password: \"\",\r\n    passwordError: \"\",\r\n    isSubmitting: false\r\n  });\r\n  const handleChange = (key, value) => {\r\n    const newState = { ...state };\r\n    newState[key] = value;\r\n    if (key === 'firstName') {\r\n      newState.firstNameError = \"\";\r\n      if (!newState.firstName.match(/^[a-z ,.'-]{3,150}$/i)) {\r\n        newState.firstNameError = \"firstName is not valid\"\r\n      }\r\n      if (newState.firstName.trim() === \"\") {\r\n        newState.firstNameError = \"First name is required\"\r\n      }\r\n    }\r\n    if (key === 'lastName') {\r\n      newState.lastNameError = \"\";\r\n      if (!newState.lastName.match(/^[a-z ,.'-]{3,150}$/i)) {\r\n        newState.lastNameError = \"lastName is not valid\"\r\n      }\r\n      if (newState.lastName.trim() === \"\") {\r\n        newState.lastNameError = \"Last name is required\"\r\n      }\r\n    }\r\n    if (key === 'email') {\r\n      newState.emailError = \"\";\r\n      if (!newState.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n        newState.emailError = \"invalid email \"\r\n      }\r\n      if (newState.email.trim() === \"\") {\r\n        newState.emailError = \"email is required\"\r\n      }\r\n    }\r\n    if (key === \"password\") {\r\n      newState.passwordError = \"\";\r\n      if (newState.password.length < 5) {\r\n        newState.passwordError = \"Can not be less than 5\"\r\n      }\r\n      if (newState.password.trim() === \"\") {\r\n        newState.passwordError = \"password is required\"\r\n      }\r\n    }\r\n    setState(newState);\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newState = { ...state };\r\n    if (newState.firstName.trim() === \"\" || newState.firstNameError) {\r\n      newState.firstNameError = newState.firstNameError || \"first name is required\"\r\n      setState(newState)\r\n      return\r\n    }\r\n    if (newState.lastName.trim() === \"\" || newState.lastNameError) {\r\n      newState.lastNameError = newState.lastNameError || \"last name is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n    if (newState.email.trim() === \"\" || newState.emailError) {\r\n      newState.emailError = newState.emailError || \"email is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n    if (newState.password.trim() === \"\" || newState.passwordError) {\r\n      newState.passwordError = newState.passwordError || \"password is required\"\r\n      setState(newState);\r\n      return\r\n    }\r\n\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    await dispatch(registerUser(state));\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    if (!user.error) {\r\n      history.push('/login');\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(user);\r\n  // }, [user]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\r\n        </Typography>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid>\r\n            <input accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(\"photoURL\", e.target.files[0])} />\r\n            <label htmlFor=\"icon-button-file\">\r\n              {/* <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoCamera />\r\n              </IconButton> */}\r\n            </label>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                value={state.firstName}\r\n                onChange={(e) => handleChange(\"firstName\", e.target.value)}\r\n                error={!!state.firstNameError}\r\n                helperText={state.firstNameError}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={state.lastName}\r\n                onChange={(e) => handleChange(\"lastName\", e.target.value)}\r\n                error={!!state.lastNameError}\r\n                helperText={state.lastNameError}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={state.email}\r\n                onChange={(e) => handleChange(\"email\", e.target.value)}\r\n                error={!!state.emailError}\r\n                helperText={state.emailError}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={state.password}\r\n                onChange={(e) => handleChange(\"password\", e.target.value)}\r\n                error={!!state.passwordError}\r\n                helperText={state.passwordError}\r\n              />\r\n            </Grid>\r\n            {user.error &&\r\n              <Grid item xs={12}>\r\n                <div className=\"error\">{user.error}</div>\r\n              </Grid>\r\n            }\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={state.isSubmitting}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\" className=\"mt-2\">\r\n            <Grid item>\r\n              Already have an account?\r\n              <Link href=\"/#/login\" variant=\"body2\">\r\n                Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { forgotPassword } from '../redux/action/user';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: '#fff',\r\n        padding: theme.spacing(3),\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst SignIn = (props) => {\r\n    const classes = useStyles();\r\n    //const user = useSelector(state => state.userState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        isSubmitting: false\r\n    });\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    const reset = async (e) => {\r\n        console.log('state',state)\r\n        e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n        await dispatch(forgotPassword(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        console.log(props.useremail.error)\r\n        if (!props.useremail.error) {\r\n            history.push('/Resetpassword/'+state.email);\r\n        }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Forgot Password\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={reset}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={state.email}\r\n                        onChange={(e) => handleChange(\"email\", e.target.value)}\r\n                    />\r\n                    <Grid>\r\n                        <div className=\"error\">\r\n                            {props.useremail.error}\r\n                        </div>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={state.isSubmitting}\r\n                    >\r\n                        Send Reset Link\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            Back to\r\n              <Link href=\"/#/login\" variant=\"body2\" className=\"mt-2\">\r\n                                {\" Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        useremail: state.userState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { forgotPassword })(SignIn);","import { CREATEGROUP, FINDGROUP, SEARCHUSER } from \"../type\";\r\nimport axios from 'axios';\r\n\r\nexport const createGroup = (group) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/group',\r\n            data: {\r\n                groupName: group.groupName,\r\n                photoURL: group.photoURL\r\n            },\r\n        }\r\n        );\r\n        dispatch({\r\n            type: CREATEGROUP,\r\n            payload: {\r\n                error: null,\r\n                group: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: CREATEGROUP,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const findGroups = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/group/find`);\r\n        dispatch({\r\n            type: FINDGROUP,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: FINDGROUP,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const searchUser = (searchQuery) => async dispatch => {\r\n    try {\r\n        //console.log(searchQuery)\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/users/search',\r\n            data: searchQuery\r\n        }\r\n        );\r\n        //console.log(data)\r\n        dispatch({\r\n            type: SEARCHUSER,\r\n            payload: { searchQuery: data }\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: SEARCHUSER,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                payload: null\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../redux/action/user';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Ouricon from '../assets/images/ouricon.jpg';\r\nimport { searchUser } from '../redux/action/group';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport { Card, Avatar, CardHeader } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        height: \"70px\"\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    menuLogo: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    user: {\r\n        textTransform: 'uppercase',\r\n        background: '#fff',\r\n        color: '#000',\r\n        borderRadius: '50%',\r\n        width: '38px',\r\n        height: '38px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontSize: '1.3rem'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '500px'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    rootclick: {\r\n        position: 'relative',\r\n    },\r\n    dropdown: {\r\n        position: 'absolute',\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        padding:'8px',\r\n        border: '1px solid',\r\n        // padding: theme.spacing(1),\r\n        backgroundColor: \"#3f51b5\",\r\n        color: \"black\",\r\n        borderBottomLeftRadius:\"8px\",\r\n        borderBottomRightRadius:\"8px\"\r\n    },\r\n\r\n}));\r\n\r\nfunction MiniDrawer(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [openClick, setopenClick] = React.useState(false);\r\n    // const [searchResults, setSearchResults] = React.useState([]);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [state, setState] = useState({\r\n        searchQuery: '',\r\n        searchQueryResult: null,\r\n        users: null\r\n    })\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setopenClick(false);\r\n        setState({\r\n            ...state, searchQuery: ''\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const logoutUser = async () => {\r\n        await props.logout();\r\n        history.push(\"/login\");\r\n    }\r\n    const handleChangeSearch = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n    // const handleSearchChange = event => {\r\n    //     setSearchTerm(event.target.value);\r\n    //     const results = props.userState.users.filter(person =>\r\n    //         person.firstName.toLowerCase().indexOf(searchTerm) !== -1\r\n    //     );\r\n    //     setSearchResults(results);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if (!props.userState.isAuthenticated) {\r\n            history.push('/login');\r\n        }\r\n    }, [props, history]);\r\n\r\n    // React.useEffect(() => {\r\n    //     const results = props.userState.users.filter(person =>\r\n    //         person.toLowerCase().includes(searchTerm)\r\n    //     );\r\n    //     setSearchResults(results);\r\n    // }, [searchTerm]);\r\n\r\n\r\n    const handleSubmitSearch = async (e) => {\r\n        e.preventDefault();\r\n        setopenClick((prev) => !prev);\r\n        await props.searchUser({\r\n            searchQuery: state.searchQuery\r\n        });\r\n        //console.log(\"props\", props.group.searchQuery);\r\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\r\n\r\n    };\r\n\r\n    const userDetailPage = async (id) => {\r\n        //console.log(id)\r\n        history.push(`/user/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar style={{ justifyContent: 'space-between' }}>\r\n                    <div className={classes.menuLogo}>\r\n                        <Typography variant=\"h6\" noWrap style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}>\r\n                            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                                <img src={Ouricon} alt=\"user\" style={{ width: \"100%\", cursor: \"pointer\" }} />\r\n                            </Link>\r\n                        </Typography>\r\n                        <form className={classes.search} style={{ marginLeft: \"100px\" }} onSubmit={handleSubmitSearch}>\r\n                            <div className={classes.searchIcon} >\r\n                                <SearchIcon type=\"submit\" />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                value={state.searchQuery}\r\n                                // value={searchTerm}\r\n                                // onChange={handleSearchChange}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\r\n                            />\r\n                            {/* <ul>\r\n                                {searchResults.map(item => (\r\n                                    <li key={item._id}>{item.firstName}</li>\r\n                                ))}\r\n                            </ul> */}\r\n                            <ClickAwayListener onClickAway={handleClickAway}>\r\n                                <div className={classes.rootclick}>\r\n                                    <div>\r\n                                        {\r\n                                            openClick ? (\r\n                                                <div className={classes.dropdown} >\r\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\" >\r\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\r\n                                                            <Grid item key={item._id} onClick={() => userDetailPage(item._id)}>\r\n                                                                {/* <div style={{ color: \"white\" }}>\r\n                                                                    We have this user.\r\n                                                                </div> */}\r\n                                                                <Tooltip title=\"click for seen user Details\" aria-label=\"add\">\r\n                                                                    <Card style={{ cursor: \"pointer\" }}>\r\n                                                                        <CardHeader\r\n                                                                            avatar={\r\n                                                                                <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                                            }\r\n                                                                            title={item.firstName + \" \" + item.lastName}\r\n                                                                        />\r\n                                                                    </Card>\r\n                                                                </Tooltip>\r\n                                                            </Grid>\r\n                                                        ))}\r\n                                                    </Grid>\r\n                                                </div>\r\n                                            ) : null}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </ClickAwayListener>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {props.user &&\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <div>\r\n\r\n                                </div>\r\n                                {props.user.photoURL ? <img src={props.user.photoURL} alt={props.user.firstName} className={classes.user} />\r\n                                    : <span className={classes.user} style={{ padding: 4 }}>\r\n                                        {props.user.firstName[0]}{props.user.lastName[0]}\r\n                                    </span>\r\n                                }\r\n                            </IconButton>\r\n\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}><Link to=\"/profile\" style={{ color: \"black\", textDecoration: \"none\" }}>Profile</Link></MenuItem>\r\n\r\n                                <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button>\r\n                        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\r\n                                <HomeIcon />\r\n                                <Typography variant=\"body2\">Home</Typography>\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <Link to=\"/friend\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\r\n                                <PersonIcon />\r\n                                <Typography variant=\"body2\">Friend</Typography>\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <Link to=\"/group\" style={{ textDecoration: \"none\" }}>\r\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\r\n                                <PeopleAltIcon />\r\n                                <Typography variant=\"body2\">Group</Typography>\r\n                            </ListItemIcon>\r\n                        </Link>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.userState)\r\n    return {\r\n        user: state.userState.user,\r\n        isAuth: state.isAuthenticated,\r\n        group: state.groupReducer,\r\n        userState: state.userState,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { logout, searchUser })(MiniDrawer);","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const sendRequest = (user) => async dispatch => {\r\n    console.log(user)\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"post\",\r\n            url: '/request',\r\n            data: user,\r\n        }\r\n        );\r\n        //console.log('data',data)\r\n\r\n        dispatch({\r\n            type: REQUEST,\r\n            payload: {\r\n                error: null,\r\n                request: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch({\r\n            type: REQUEST,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                request: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const allRequest = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/request/all`);\r\n        dispatch({\r\n            type: ALLREQUEST,\r\n            payload: { requests: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const updatetRequest = (friend) => async dispatch => {\r\n    try {\r\n        const { data } = await axios({\r\n            method: \"put\",\r\n            url: '/request/update',\r\n            data: friend,\r\n        }\r\n        );\r\n        //console.log(data)\r\n        dispatch({\r\n            type: UPDATEREQUEST,\r\n            payload: {\r\n                error: null,\r\n                update: data\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: UPDATEREQUEST,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                request: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const allFriends = () => async dispatch => {\r\n    try {\r\n        const { data } = await axios(`/users/friend`);\r\n        //console.log('data', data)\r\n        dispatch({\r\n            type: FRIENDS,\r\n            payload: { friends: data }\r\n        })\r\n        //console.log(data)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/header';\r\nimport { connect } from 'react-redux';\r\nimport { allUser } from '../redux/action/user';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport { sendRequest, allRequest, updatetRequest } from '../redux/action/request';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        users: null,\r\n        snackbarOpen: false,\r\n        snackbarMessage: \"\",\r\n        snackbarSeverity: \"success\"\r\n    }\r\n    async componentDidMount() {\r\n        if (this.props.userState.user) {\r\n            if (!this.props.userState.users) {\r\n                await this.props.allUser();\r\n            }\r\n            await this.props.allRequest();\r\n            this.setState({\r\n                users: this.props.userState.users,\r\n            })\r\n            //console.log(this.props.request.requests)\r\n            await this.props.updatetRequest();\r\n            console.log(this.props, \"user\")\r\n        }\r\n    }\r\n\r\n    connect = async (receiver) => {\r\n        await this.props.sendRequest({\r\n            receiver: receiver,\r\n            sender: this.props.userState.user.id\r\n        });\r\n        // console.log('message',this.props.request.error);\r\n        if (this.props.request.error) {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.error,\r\n                snackbarSeverity: 'error'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.request.message\r\n            })\r\n\r\n        }\r\n    }\r\n    acceptGroupRequest = async (id, groupId) => {\r\n        await this.props.updatetRequest({\r\n            isAccepted: true,\r\n            id,\r\n            groupId\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Accept request successfully\"\r\n        });\r\n        await this.props.allRequest();\r\n    }\r\n    Accept = async (id, friend) => {\r\n        await this.props.updatetRequest({\r\n            isAccepted: true,\r\n            id,\r\n            friend\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Accept request successfully\"\r\n        });\r\n        await this.props.allRequest();\r\n\r\n    }\r\n    Reject = async (id) => {\r\n        await this.props.updatetRequest({\r\n            isReject: true,\r\n            id\r\n        });\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            snackbarMessage: \"Reject request successfully\",\r\n            snackbarSeverity: 'error'\r\n        })\r\n        await this.props.allRequest();\r\n\r\n    }\r\n\r\n\r\n\r\n    showSnackbar = () => {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            open={this.state.snackbarOpen}\r\n            onClose={() => { this.setState({ snackbarOpen: false }) }}\r\n            autoHideDuration={3000}\r\n        >\r\n            <MuiAlert severity={this.state.snackbarSeverity} variant=\"filled\">\r\n                {this.state.snackbarMessage}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"backgrnd-home\" style={{ marginLeft: \"100px\" }}>\r\n                <Header />\r\n                {this.state.users ?\r\n                    <div className=\"row\">\r\n                        <Grid container >\r\n                            <Grid container item spacing={3} xs={12} sm={9}>\r\n                                {this.state.users && this.state.users.map((item) => (\r\n                                    <Grid item xs={12} sm={4} key={item._id}>\r\n                                        <Card style={{ maxWidth: \"200px\" }} className=\"col-2\">\r\n                                            <CardMedia\r\n                                                className=\"user-image\"\r\n                                                component=\"img\"\r\n                                                image={item.photoURL || userimage}\r\n                                                title=\"user image\"\r\n                                            />\r\n                                            <CardActions style={{ justifyContent: 'center', flexDirection: 'column' }}>\r\n                                                <Typography style={{ fontWeight: \"bold\" }}>\r\n                                                    {item.firstName + \" \" + item.lastName}\r\n                                                </Typography>\r\n                                                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.connect(item._id)}>connect</Button>\r\n                                            </CardActions>\r\n\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <Paper style={{ padding: '5px 5px 20px 5px' }}>\r\n                                    <div style={{ textAlign: \"center\", maxWidth: \"300px\" }} >\r\n                                        <h3>Requests</h3>\r\n                                        {this.props.request.requests.length > 0 ?\r\n                                            <div>\r\n                                                {\r\n                                                    this.props.request.requests && this.props.request.requests.map((item) => (\r\n                                                        <Card style={{ display: \"flex\", margin: \"10px\" }} key={item._id}>\r\n                                                            {item.sender &&\r\n                                                                <>\r\n                                                                    <Grid item xs={3} style={{ float: \"left\" }}>\r\n                                                                        <img alt=\"user\" src={item.sender.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"10px\" }}>\r\n                                                                        {item.sender.firstName + \" \" + item.sender.lastName}\r\n                                                                    </Grid>\r\n\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                                        <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.Accept(item._id, item.sender._id)}>\r\n                                                                            <CheckIcon />\r\n                                                                        </IconButton>\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                                        <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\r\n                                                                            <ClearIcon />\r\n                                                                        </IconButton>\r\n                                                                    </Grid>\r\n                                                                </>\r\n                                                            }\r\n                                                            {item.groupId &&\r\n                                                                <>\r\n                                                                    <Grid item xs={3} style={{ float: \"left\" }}>\r\n                                                                        <img alt=\"user\" src={item.groupId.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"10px\" }}>\r\n                                                                        {item.groupId.groupName}\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                                        <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.acceptGroupRequest(item._id, item.groupId._id)}>\r\n                                                                            <CheckIcon />\r\n                                                                        </IconButton>\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={3} style={{ float: \"right\", marginTop: \"5px\" }}>\r\n                                                                        <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\r\n                                                                            <ClearIcon />\r\n                                                                        </IconButton>\r\n                                                                    </Grid>\r\n                                                                </>\r\n                                                            }\r\n                                                        </Card>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                            : <div>\r\n                                                No request\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    : <div className=\"loader\">\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n                {this.showSnackbar()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.userState,\r\n        request: state.requestReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { allUser, sendRequest, allRequest, updatetRequest })(Home);","import React, { useState } from 'react';\r\nimport Header from '../components/header';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUser } from '../redux/action/user';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Backdrop, CircularProgress } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.userState);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    userId: props?.user.id,\r\n    token: props?.user.token,\r\n    firstName: props?.user.firstName,\r\n    lastName: props?.user.lastName,\r\n    email: props?.user.email,\r\n    isSubmitting: false,\r\n    photoURL: null\r\n\r\n  });\r\n  const handleChange = (key, value) => {\r\n    const newState = { ...state };\r\n    newState[key] = value;\r\n    setState(newState);\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    console.log(state.photoURL)\r\n    e.preventDefault();\r\n    if (!state.photoURL) {\r\n      return\r\n    }\r\n    const newState = { ...state };\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    await dispatch(updateUser(state));\r\n    newState.isSubmitting = false;\r\n    newState.photoURL = null;\r\n    setState(newState);\r\n    if (!user.error) {\r\n      history.push('/profile');\r\n    }\r\n  }\r\n  const removeImage = async (e) => {\r\n    e.preventDefault();\r\n    const newState = { ...state };\r\n    newState.isSubmitting = true;\r\n    setState(newState);\r\n    await dispatch(updateUser(state));\r\n    newState.isSubmitting = false;\r\n    newState.photoURL = null;\r\n    setState(newState);\r\n    if (!user.error) {\r\n      history.push('/profile');\r\n    }\r\n  }\r\n  return props.user && (\r\n    <div>\r\n      <Header />\r\n      <main className=\"backgrnd\" style={{ marginLeft: \"100px\", textAlign: \"center\", marginTop: \"50px \" }} >\r\n        <div style={{ marginBottom: \"40px\" }}>\r\n          {state.photoURL ? <img src={URL.createObjectURL(state.photoURL)} style={{ borderRadius: \"50%\", width: \"200px\", height: \"200px\" }} alt={props.user.firstName} />\r\n            : props?.user?.photoURL ? <img src={props.user.photoURL} style={{ borderRadius: \"50%\", width: \"200px\", height: \"200px\" }} alt={props.user.firstName} />\r\n              : <span style={{ background: \"gray\", borderRadius: \"50%\", width: \"50%\", height: \"50%\", padding: \"40px\", color: \"#000\", fontSize: \"50px\", textTransform: \"uppercase\" }}>\r\n                {props.user.firstName[0]}{props.user.lastName[0]}\r\n              </span>\r\n          }\r\n        </div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Grid>\r\n              <input accept=\"image/*\"\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                className={classes.input}\r\n                onChange={(e) => handleChange(\"photoURL\", e.target.files[0])} />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <Tooltip title=\"Upload Photo\">\r\n                  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </label>\r\n              <Tooltip title=\"Remove Photo\">\r\n                <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" disabled={state.isSubmitting}\r\n                  onClick={removeImage}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={state.isSubmitting}\r\n            >\r\n              Update Photo\r\n          </Button>\r\n          </form>\r\n          {/* <Grid>\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" disabled={state.isSubmitting}\r\n              onClick={removeImage}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Grid> */}\r\n\r\n        </Container>\r\n        <h3>\r\n          Name: {props.user.firstName + \" \" + props.user.lastName}\r\n        </h3>\r\n        <h3>\r\n          Email: {props.user.email}\r\n        </h3>\r\n      </main>\r\n      <Backdrop className={classes.backdrop} open={state.isSubmitting} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(\"pro\", state)\r\n  return {\r\n    user: state.userState.user,\r\n    isAuth: state.isAuthenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { changePassword } from '../redux/action/user';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: '#fff',\r\n        padding: theme.spacing(3),\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Resetpassword = (props) => {\r\n    const classes = useStyles();\r\n   // const user = useSelector(state => state.userState);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        resetToken: \"\",\r\n        password: \"\",\r\n        isSubmitting: false,\r\n        email: props.match.params.email\r\n    });\r\n\r\n\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    const reset = async (e) => {\r\n        e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n\r\n        await dispatch(changePassword(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        if (!props.user.error) {\r\n            history.push('/login');\r\n        }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Reset Password\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={reset}>\r\n                    <Grid>\r\n                        <h2> {props.match.params.email}</h2>\r\n                    </Grid>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"resetToken\"\r\n                        label=\"resetToken\"\r\n                        type=\"resetToken\"\r\n                        id=\"resetToken\"\r\n                        autoComplete=\"resetToken\"\r\n                        value={state.resetToken}\r\n                        onChange={(e) => handleChange(\"resetToken\", e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={state.password}\r\n                        onChange={(e) => handleChange(\"password\", e.target.value)}\r\n                    />\r\n                    <Grid>\r\n                    <div className=\"error\">\r\n                            {props.user.error}\r\n                        </div>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change Password\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            Back to\r\n              <Link href=\"/\" variant=\"body2\" className=\"mt-2\">\r\n                                {\" Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        user: state.userState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { changePassword })(Resetpassword);","import React, { Component } from 'react';\r\nimport Header from '../components/header';\r\nimport { allFriends } from '../redux/action/request';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar, CardHeader, Fab } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport * as io from 'socket.io-client';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { singleChat } from '../redux/action/chat';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Portal from '@material-ui/core/Portal';\r\nimport Picker from 'emoji-picker-react';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nclass Friends extends Component {\r\n    state = {\r\n        friends: null,\r\n        selectFriend: null,\r\n        message: \"\",\r\n        messages: [],\r\n        user: this.props.user.user,\r\n        loading: false,\r\n        openemoji: false,\r\n        chosenEmoji: null\r\n    }\r\n    messageRef = React.createRef();\r\n    socket = null;\r\n    async componentDidMount() {\r\n        await this.props.allFriends();\r\n        // console.log(this.props)\r\n        await this.setState({ friends: this.props.friend.friends.friends });\r\n        //  console.log(this.state.friends);\r\n        this.socket = io(\"/\");\r\n        this.socket.emit('user-join', this.props.user.user.id);\r\n        this.socket.on('user-join', async (data) => {\r\n            const friends = [...this.state.friends];\r\n            for (let friend of friends) {\r\n                friend.unread = 0;\r\n                if (friend._id === data.userId) {\r\n                    friend.socketId = data.socketId\r\n                }\r\n            }\r\n            await this.setState({ friends });\r\n        });\r\n        this.socket.on('one-2-one', (data) => {\r\n            if ((data.sender === this.state.user.id) || (this.state.selectFriend && this.state.selectFriend._id === data.sender)) {\r\n                const messages = [...this.state.messages];\r\n                messages.push(data);\r\n                this.setState({ messages });\r\n            } else {\r\n                const friends = [...this.state.friends];\r\n                for (let friend of friends) {\r\n                    if (friend._id === data.sender) {\r\n                        friend.unread = friend.unread ? friend.unread + 1 : 1;\r\n                    }\r\n                }\r\n                this.setState({ friends });\r\n\r\n            }\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\r\n            photoURL: this.state.user.photoURL || null,\r\n            sender: this.state.user.id,\r\n            message: this.state.message,\r\n            socketId: this.state.selectFriend.socketId,\r\n            receiver: this.state.selectFriend._id\r\n        }\r\n        //console.log(this.socket.id);\r\n        //console.log(message);\r\n        if (this.state.message) {\r\n            this.socket.emit('one-2-one', message);\r\n            this.setState({\r\n                ...this.state,\r\n                message: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleSave(files) {\r\n        //Saving files to state for further use and closing Modal.\r\n        this.setState({\r\n            files: files,\r\n            open: false\r\n        });\r\n        console.log(files)\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    }\r\n\r\n    // hanleSearchChange = (e) => {\r\n    //     this.setState({\r\n    //         chatMessage: e.target.value\r\n    //     })\r\n    // }\r\n    renderCards = () => {\r\n        console.log(\"inside renderrrr\", this.props.chats)\r\n        this.props.chats.chats\r\n            && this.props.chats.chats.chats.map((chat) => (\r\n                {/*<ChatCard  key={chat._id}  {...chat} />*/ }\r\n            ));\r\n    }\r\n    handleFrndChat = async (item) => {\r\n        //console.log(item)\r\n        item.unread = 0;\r\n        await this.setState({\r\n            selectFriend: item\r\n        });\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        await this.props.singleChat(item._id);\r\n        //console.log(this.props.chats.singleMessages)\r\n        await this.setState({\r\n            messages: this.props.chats.singleMessages\r\n        })\r\n        await this.setState({\r\n            loading: false\r\n        });\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        console.log(event.target.files[0]);\r\n        const message = {\r\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\r\n            photoURL: this.state.user.photoURL || null,\r\n            sender: this.state.user.id,\r\n            file: event.target.files[0],\r\n            fileName: event.target.files[0].name,\r\n            type: event.target.files[0].type,\r\n            socketId: this.state.selectFriend.socketId,\r\n            receiver: this.state.selectFriend._id\r\n        }\r\n        this.socket.emit('single-fileupload', message);\r\n    }\r\n\r\n    handleClickEmoji = () => {\r\n        this.setState({\r\n            openemoji: true\r\n        })\r\n    };\r\n\r\n    handleClickAwayEmoji = () => {\r\n        this.setState({\r\n            openemoji: false\r\n        })\r\n        // setOpenEmoji(false);\r\n    };\r\n\r\n    onEmojiClick = async (event, emojiObject) => {\r\n        // this.setState(emojiObject);\r\n        //console.log(emojiObject.emoji)\r\n        await this.setState({\r\n            ...this.state, message: this.state.message + emojiObject.emoji\r\n        })\r\n        this.setState({\r\n            chosenEmoji: false\r\n        })\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messageRef.current && this.messageRef.current.scrollIntoView();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }}>\r\n                <Header />\r\n                {this.state.friends ?\r\n                    <Grid container >\r\n                        <Grid item sm={3} >\r\n                            <div className=\"friend-list\">\r\n                                <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n                                    {this.state.friends && this.state.friends.map((item) => (\r\n                                        <Grid item key={item._id} style={{ margin: '10px 0' }}>\r\n                                            <Card className=\"backgrnd\" onClick={() => this.handleFrndChat(item)} style={this.state.selectFriend && this.state.selectFriend._id === item._id ? { backgroundColor: '#bbb' } : { cursor: 'pointer' }}>\r\n                                                <CardHeader\r\n                                                    avatar={\r\n                                                        <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                    }\r\n                                                    title={item.firstName + \" \" + item.lastName}\r\n                                                    action={\r\n                                                        <span className='unread'>\r\n                                                            {item.unread > 0 && item.unread}\r\n                                                        </span>\r\n                                                    }\r\n                                                    subheader={\r\n                                                        <div>\r\n                                                            Last seen:{new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                        </div>\r\n                                                    }\r\n                                                />\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))}\r\n                                </Grid>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={9}>\r\n                            <div>\r\n                                {!this.state.selectFriend ?\r\n                                    <div>\r\n                                        {this.state.friends.length === 0 ?\r\n                                            <h1>You don't have any friend.</h1>\r\n                                           : <h1>Click on any friend to start conversation.</h1>\r\n                                        }\r\n                                    </div>\r\n                                    :\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\r\n                                            <Toolbar>\r\n                                                <Typography variant=\"h6\" className=\"title\" noWrap>\r\n                                                    <CardHeader\r\n                                                        avatar={\r\n                                                            <Avatar alt=\"user\" src={this.state.selectFriend.photoURL || userimage} />\r\n                                                        }\r\n                                                        title={this.state.selectFriend.firstName + ' ' + this.state.selectFriend.lastName}\r\n                                                        subheader={\r\n                                                            <div className=\"time\">Last seen:{new Date(this.state.selectFriend.updatedAt).toLocaleTimeString() + ' ' + new Date(this.state.selectFriend.updatedAt).toLocaleDateString()}\r\n                                                            </div>\r\n                                                        }\r\n                                                    />\r\n                                                </Typography>\r\n                                                <Tooltip title=\"Share documents\" aria-label=\"add\">\r\n                                                    <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\r\n                                                        <input accept=\"image/*,video/*,application/pdf\" className='input' id=\"icon-button-file\" type=\"file\" onChange={this.onChangeHandler} />\r\n                                                        <label htmlFor=\"icon-button-file\" >\r\n                                                            <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\r\n                                                                <AttachmentIcon />\r\n                                                            </IconButton>\r\n                                                        </label>\r\n                                                    </Fab>\r\n                                                </Tooltip>\r\n                                            </Toolbar>\r\n                                        </AppBar>\r\n                                        <div className=\"chat-box\">\r\n                                            <Grid className=\"messages\">\r\n                                                {this.state.loading && <div className=\"loader\"><CircularProgress /></div>}\r\n                                                {this.state.messages.map(item => (\r\n                                                    <Grid item xs={12} key={item._id} style={{ padding: '8px' }} ref={this.messageRef}>\r\n                                                        <div className=\"message\">\r\n                                                            <Avatar className=\"message-photo\" src={item.photoURL || userimage} alt=\"message\" />\r\n                                                            <div className=\"message-name\">{item.name}</div>\r\n                                                        </div>\r\n                                                        {item.file ?\r\n                                                            <>\r\n                                                                {item?.type.indexOf('video') !== -1 ?\r\n                                                                    <video width=\"320\" height=\"240\" controls autoPlay>\r\n                                                                        <source src={`/uploads/${item.file}`} type={item.type} />\r\n                                                                    </video>\r\n                                                                    :\r\n                                                                    item?.type.indexOf('pdf') !== -1 || item?.type.indexOf('text') !== -1 ?\r\n                                                                        <div className=\"message-content\">\r\n                                                                            <a className=\"send-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\r\n                                                                        </div>\r\n                                                                        :\r\n                                                                        <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\r\n                                                                }\r\n                                                            </>\r\n                                                            :\r\n                                                            <div className=\"message-content\">{item.message}</div>\r\n                                                        }\r\n                                                    </Grid>\r\n                                                ))}\r\n                                            </Grid>\r\n                                            <form className=\"message-form\" onSubmit={this.sendMessage}>\r\n                                                <Grid container>\r\n                                                    <Grid item xs={1} sm={1}>\r\n                                                        <div>\r\n                                                            <ClickAwayListener onClickAway={this.handleClickAwayEmoji}>\r\n                                                                <div>\r\n                                                                    <InsertEmoticonIcon onClick={this.handleClickEmoji} style={{ cursor: \"pointer\" }} />\r\n                                                                    {this.state.openemoji ? (\r\n                                                                        <Portal>\r\n                                                                            <div className=\"emoji-class\">\r\n                                                                                <Picker onEmojiClick={this.onEmojiClick} />\r\n                                                                            </div>\r\n                                                                        </Portal>\r\n                                                                    ) : null}\r\n                                                                </div>\r\n                                                            </ClickAwayListener>\r\n                                                        </div>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={9} sm={10}>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            name=\"message\"\r\n                                                            variant=\"outlined\"\r\n                                                            autoComplete=\"off\"\r\n                                                            size=\"small\"\r\n                                                            value={this.state.message}\r\n                                                            onChange={(e) => this.setState({ message: e.target.value })}\r\n                                                        />\r\n                                                    </Grid >\r\n                                                    <Grid item xs={2} sm={1}>\r\n                                                        <Fab style={{\r\n                                                            width: \"40px\",\r\n                                                            height: \"40px\"\r\n                                                        }} type=\"submit\"><SendIcon /></Fab>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </form>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    : <div className='loader'>\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"state11\", state)\r\n    //console.log(\"chat\", state.singleChatReducer)\r\n    return {\r\n        friend: state.requestReducer,\r\n        user: state.userState,\r\n        chats: state.chatReducer\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { allFriends, singleChat })(Friends);","import { ALLMESSAGE, SINGLECHAT } from '../type';\r\nimport axios from 'axios';\r\nexport const allMessage = (groupId) => async (dispatch) => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/chat/${groupId}`);\r\n        dispatch({\r\n            type: ALLMESSAGE,\r\n            payload: { messages: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: ALLMESSAGE,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const singleChat = (friendId) => async (dispatch) => {\r\n    try {\r\n        axios.defaults.withCredentials = true;\r\n        const { data } = await axios(`/chat/single/${friendId}`);\r\n        dispatch({\r\n            type: SINGLECHAT,\r\n            payload: { singleMessages: data }\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: SINGLECHAT,\r\n            payload: {\r\n                error: error.response.data.error,\r\n                group: null\r\n            }\r\n        })\r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Header from '../components/header';\r\nimport { connect } from 'react-redux';\r\nimport { createGroup, findGroups, searchUser } from '../redux/action/group';\r\nimport { allMessage } from '../redux/action/chat';\r\nimport { useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport { Card, Avatar, CardHeader, Fab } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { sendRequest } from '../redux/action/request';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport * as io from 'socket.io-client';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Picker from 'emoji-picker-react';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Portal from '@material-ui/core/Portal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\"\r\n    },\r\n    root1: {\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    dropdown: {\r\n        position: 'fixed',\r\n        width: 200,\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    }\r\n}));\r\n\r\nconst Group = (props) => {\r\n    const messageRef = useRef();\r\n    const classes = useStyles();\r\n    const [openemoji, setOpenEmoji] = React.useState(false);\r\n\r\n    const handleClickEmoji = () => {\r\n        setOpenEmoji((prev) => !prev);\r\n    };\r\n\r\n    const handleClickAwayEmoji = () => {\r\n        setOpenEmoji(false);\r\n    };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openSearchDialog, setopenSearchDialog] = React.useState(false)\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        groupName: null,\r\n        isSubmitting: null,\r\n        photoURL: null,\r\n        searchQuery: null,\r\n        searchQueryResult: null,\r\n        selectedGroup: null,\r\n        snackbarOpen: false,\r\n        snackbarMessage: \"\",\r\n        snackbarSeverity: \"success\",\r\n        user: props.userState.user,\r\n        message: \"\"\r\n    });\r\n\r\n    //const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const onEmojiClick = async (event, emojiObject) => {\r\n        // setChosenEmoji(emojiObject);\r\n        //console.log(emojiObject)\r\n        await setState({\r\n            ...state, message: state.message + emojiObject.emoji\r\n        })\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [messages, setMessages] = useState([]);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const socket = io(\"/\");\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClickOpenSearch = () => {\r\n        setopenSearchDialog(true);\r\n    };\r\n    const handleCloseSearch = () => {\r\n        setopenSearchDialog(false);\r\n    };\r\n\r\n    const handleChange = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        // e.preventDefault();\r\n        setState({ ...state, isSubmitting: true });\r\n        await dispatch(createGroup(state));\r\n        setState({ ...state, isSubmitting: false });\r\n        props.findGroups();\r\n        setOpen(false);\r\n    }\r\n    const handleChangeSearch = (key, value) => {\r\n        setState({\r\n            ...state,\r\n            [key]: value\r\n        });\r\n    }\r\n    const handleSubmitSearch = async (e) => {\r\n        await props.searchUser({\r\n            searchQuery: state.searchQuery\r\n        });\r\n        //console.log(\"props\", props.group.searchQuery);\r\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\r\n    };\r\n    const sendGroupRequest = async (receiver) => {\r\n        await props.sendRequest({\r\n            receiver: receiver,\r\n            groupId: state.selectedGroup._id\r\n        });\r\n        if (props.request.error) {\r\n            setState({\r\n                ...state,\r\n                snackbarOpen: true,\r\n                snackbarMessage: props.request.error,\r\n                snackbarSeverity: 'error'\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                snackbarOpen: true,\r\n                snackbarMessage: props.request.request.message\r\n            })\r\n\r\n        }\r\n        setopenSearchDialog(false);\r\n        setTimeout(() => {\r\n            setState({\r\n                ...state,\r\n                selectedGroup: state.selectedGroup\r\n            })\r\n        }, 2000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(findGroups());\r\n        //console.log(props)\r\n    }, [dispatch]);\r\n\r\n    socket.on('message', (data) => {\r\n        setMessages(messages => messages.concat(data));\r\n        scrollToBottom();\r\n\r\n    })\r\n\r\n    const openChatting = async (item) => {\r\n        //console.log(item)\r\n        setState({\r\n            ...state, selectedGroup: item,\r\n        });\r\n        setLoading(true)\r\n        await props.allMessage(item._id);\r\n        setMessages(props.chat.messages)\r\n        setLoading(false);\r\n        socket.emit('join', item._id);\r\n        scrollToBottom();\r\n    }\r\n\r\n\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            name: state.user.firstName + \" \" + state.user.lastName,\r\n            photoURL: state.user.photoURL || null,\r\n            sender: state.user.id,\r\n            message: state.message,\r\n            groupId: state.selectedGroup._id,\r\n        }\r\n        if (state.message) {\r\n            socket.emit('message', message);\r\n            setState({\r\n                ...state,\r\n                message: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const onChangeHandler = (event) => {\r\n        console.log(event.target.files[0]);\r\n        const message = {\r\n            name: state.user.firstName + \" \" + state.user.lastName,\r\n            photoURL: state.user.photoURL || null,\r\n            sender: state.user.id,\r\n            file: event.target.files[0],\r\n            type: event.target.files[0].type,\r\n            fileName: event.target.files[0].name,\r\n            groupId: state.selectedGroup._id,\r\n        }\r\n        console.log(state)\r\n        socket.emit('fileupload', message);\r\n    }\r\n\r\n    const showSnackbar = () => {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            open={state.snackbarOpen}\r\n            onClose={() => { setState({ snackbarOpen: false }) }}\r\n            autoHideDuration={3000}\r\n        >\r\n            <MuiAlert severity={state.snackbarSeverity} variant=\"filled\">\r\n                {state.snackbarMessage}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        if (messageRef.current) {\r\n            messageRef.current.scrollIntoView();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }} >\r\n            <Header />\r\n            {props.group.groups ?\r\n                <Grid container>\r\n                    <Grid item sm={3} style={{ marginTop: \"25px\" }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Create a New Group\r\n      </Button>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">New Group</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To create a new group\r\n          </DialogContentText>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"Group name\"\r\n                                    label=\" Group name\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    required\r\n                                    onChange={(e) => handleChange(\"groupName\", e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    id=\"group logo\"\r\n                                    label=\" Group logo\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    required\r\n                                    onChange={(e) => handleChange(\"photoURL\", e.target.value)}\r\n                                />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n          </Button>\r\n                                <Button onClick={handleSubmit} disabled={state.isSubmitting || !(state.photoURL && state.groupName)} color=\"primary\">\r\n                                    Done\r\n          </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        <div className=\"group-list\">\r\n                            <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n                                {props.group.groups && props.group.groups.map((item) => (\r\n                                    <Grid item key={item._id} style={{ margin: '10px 0' }}>\r\n                                        <Card onClick={() => openChatting(item)} style={state.selectedGroup && state.selectedGroup._id === item._id ? { backgroundColor: '#ccc' } : { cursor: 'pointer' }}>\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                }\r\n                                                title={item.groupName}\r\n                                                subheader={\r\n                                                    <div>\r\n                                                        Created Date:{new Date(item.createdAt).toLocaleDateString()}\r\n                                                    </div>\r\n                                                }\r\n                                            />\r\n                                        </Card>\r\n\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={9} >\r\n                        {!state.selectedGroup ?\r\n                            <div>\r\n                                {props.group.groups.length === 0 ?\r\n                                    <h1>you don't have any group.</h1>\r\n                                    :\r\n                                    <h1>\r\n                                        Click on any group for chatting.\r\n                            </h1>\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\r\n                                    <Toolbar>\r\n                                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    <Avatar alt=\"user\" src={state.selectedGroup.photoURL || userimage} />\r\n                                                }\r\n                                                title={state.selectedGroup.groupName}\r\n                                            />\r\n\r\n                                        </Typography>\r\n                                        <div style={{ marginRight: \"10px\", color: \"lightblue\" }}>\r\n                                            {state.selectedGroup.member.length} Participants\r\n                                        </div>\r\n                                        <div >\r\n                                            <Tooltip title=\"Share documents\" aria-label=\"add\">\r\n                                                <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\r\n                                                    <input accept=\"image/*,video/*,application/pdf\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={onChangeHandler} />\r\n                                                    <label htmlFor=\"icon-button-file\" >\r\n                                                        <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <AttachmentIcon />\r\n                                                        </IconButton>\r\n                                                    </label>\r\n                                                </Fab>\r\n                                            </Tooltip>\r\n                                            {state.user.id === state.selectedGroup.owner &&\r\n                                                <Tooltip title=\"Add member\" aria-label=\"add\">\r\n                                                    <Fab size=\"small\" onClick={handleClickOpenSearch}>\r\n                                                        <PersonAddIcon />\r\n                                                    </Fab>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            <Dialog open={openSearchDialog} onClose={handleCloseSearch} aria-labelledby=\"form-dialog-title\">\r\n                                                <DialogTitle id=\"form-dialog-title\">Search User</DialogTitle>\r\n                                                <DialogContent>\r\n                                                    <TextField\r\n                                                        autoFocus\r\n                                                        margin=\"dense\"\r\n                                                        id=\"search\"\r\n                                                        label=\"Search\"\r\n                                                        type=\"text\"\r\n                                                        fullWidth\r\n                                                        onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\r\n                                                    />\r\n                                                </DialogContent>\r\n                                                <DialogActions>\r\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\">\r\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\r\n                                                            <Grid item key={item._id}>\r\n                                                                <Tooltip title=\"click for send request\" aria-label=\"add\" style={{ cursor: 'pointer' }}>\r\n                                                                    <Card onClick={() => sendGroupRequest(item._id)}>\r\n                                                                        <CardHeader\r\n                                                                            avatar={\r\n                                                                                <Avatar alt=\"user\" src={item.photoURL || userimage} />\r\n                                                                            }\r\n                                                                            title={item.firstName + \" \" + item.lastName}\r\n                                                                        />\r\n                                                                    </Card>\r\n                                                                </Tooltip>\r\n                                                            </Grid>\r\n                                                        ))}\r\n                                                    </Grid>\r\n\r\n                                                </DialogActions>\r\n                                                <DialogActions>\r\n                                                    <Button onClick={handleCloseSearch} color=\"primary\">\r\n                                                        Cancel\r\n                                            </Button>\r\n                                                    <Button onClick={handleSubmitSearch} color=\"primary\">\r\n                                                        Search\r\n                                            </Button>\r\n                                                </DialogActions>\r\n                                            </Dialog>\r\n                                        </div>\r\n                                    </Toolbar>\r\n                                </AppBar>\r\n                                <div className=\"chat-box\">\r\n                                    <Grid className=\"messages\">\r\n                                        {loading && <div className={classes.root1}><CircularProgress /></div>}\r\n                                        {messages && messages.map(item => (\r\n                                            <Grid item xs={12} key={item._id} style={{ padding: '8px' }} ref={messageRef}>\r\n                                                <div className=\"message\">\r\n                                                    <Avatar className=\"message-photo\" src={item.phtoURL || userimage} alt=\"message\" />\r\n                                                    <div className=\"message-name\">{item.name}</div>\r\n                                                </div>\r\n                                                {item.file ?\r\n                                                    <>\r\n                                                        {item?.type.indexOf('video') !== -1 ?\r\n                                                            <video width=\"320\" height=\"240\" controls autoPlay>\r\n                                                                <source src={`/uploads/${item.file}`} type={item.typetype} />\r\n                                                            </video>\r\n                                                            :\r\n                                                            item?.type.indexOf('pdf') !== -1 || item?.type.indexOf('text') !== -1 ?\r\n                                                                <div className=\"message-content\">\r\n                                                                    <a className=\"send-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\r\n                                                                </div>\r\n                                                                :\r\n                                                                <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <div className=\"message-content\">{item.message}</div>\r\n                                                }\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                    <form className=\"message-form\" onSubmit={sendMessage}>\r\n                                        <Grid container>\r\n                                            <Grid item xs={1} sm={1}>\r\n                                                <div>\r\n                                                    <ClickAwayListener onClickAway={handleClickAwayEmoji}>\r\n                                                        <div>\r\n                                                            <InsertEmoticonIcon onClick={handleClickEmoji} style={{ cursor: \"pointer\" }} />\r\n                                                            {openemoji ? (\r\n                                                                <Portal>\r\n                                                                    <div className={classes.dropdown}>\r\n                                                                        <Picker onEmojiClick={onEmojiClick} />\r\n                                                                    </div>\r\n                                                                </Portal>\r\n                                                            ) : null}\r\n                                                        </div>\r\n                                                    </ClickAwayListener>\r\n                                                </div>\r\n                                            </Grid>\r\n                                            <Grid item xs={9} sm={10}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    placeholder=\"type a message \"\r\n                                                    name=\"message\"\r\n                                                    variant=\"outlined\"\r\n                                                    autoComplete=\"off\"\r\n                                                    size=\"small\"\r\n                                                    value={state.message}\r\n                                                    onChange={(e) => setState({ ...state, message: e.target.value })}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2} sm={1}>\r\n                                                <Fab style={{\r\n                                                    width: \"40px\",\r\n                                                    height: \"40px\"\r\n                                                }} type=\"submit\"><SendIcon /></Fab>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                : <div className={classes.root1}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {showSnackbar()}\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.groupReducer.message)\r\n    return {\r\n        userState: state.userState,\r\n        group: state.groupReducer,\r\n        request: state.requestReducer,\r\n        chat: state.chatReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createGroup, findGroups, searchUser, sendRequest, allMessage })(Group);\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/header';\r\nimport { allUser, singleUser } from '../redux/action/user';\r\nimport { sendRequest } from '../redux/action/request';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport userimage from '../assets/images/user.jpg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        user: null,\r\n        snackbarOpen: false,\r\n        snackbarMessage: \"\",\r\n        snackbarSeverity: \"success\"\r\n    }\r\n\r\n    connect = async (receiver) => {\r\n        await this.props.sendRequest({\r\n            receiver: receiver,\r\n            sender: this.props.userState.user.id\r\n        });\r\n        if (this.props.request.error) {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.error,\r\n                snackbarSeverity: 'error'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                snackbarOpen: true,\r\n                snackbarMessage: this.props.request.request.message\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    showSnackbar = () => {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            open={this.state.snackbarOpen}\r\n            onClose={() => { this.setState({ snackbarOpen: false }) }}\r\n            autoHideDuration={3000}\r\n        >\r\n            <MuiAlert severity={this.state.snackbarSeverity} variant=\"filled\">\r\n                {this.state.snackbarMessage}\r\n            </MuiAlert>\r\n        </Snackbar>\r\n    }\r\n    async componentDidMount() {\r\n        //await this.props.allUser();\r\n        await this.props.singleUser(this.props.match.params.id);\r\n        //console.log(this.props.userState.oneuser)\r\n        await this.setState({ user: this.props.userState.oneuser });\r\n        // if (this.props.userState.oneuser.group && this.props.userState.oneuser.group.length > 0){\r\n        //     const groups=[];\r\n        //     this.props.userState.oneuser.group.forEach((groupId)=>{\r\n        //       const groupData = this.props.userState.users.\r\n        //     })\r\n        // }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginLeft: \"100px\" }}>\r\n                <Header />\r\n                {this.state.user ?\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <img height=\"300px\" width=\"300px\" alt=\"user\" src={this.state.user.photoURL || userimage} />\r\n                            <h1>Name: {this.state.user.firstName + \" \" + this.state.user.lastName}</h1>\r\n                            <h2>Email: {this.state.user.email}</h2>\r\n                            <h3>Join date : {new Date(this.state.user.createdAt).toLocaleDateString()}</h3>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <Tooltip title=\"send Request\" aria-label=\"add\">\r\n                                <Button variant=\"contained\" color=\"primary\" size=\"large\" style={{ marginLeft: \"60px\" }} onClick={() => this.connect(this.state.user._id)}>connect</Button>\r\n                            </Tooltip>\r\n                            <h1>Friends</h1>\r\n                            {this.state.user?.friends.map((fr) => (\r\n                                <div key={fr._id}>\r\n                                    {/* <h3>{fr.firstName} {fr.lastName}</h3> */}\r\n                                    <Card className=\"friend\">\r\n                                        <CardHeader\r\n                                            avatar={\r\n                                                <Avatar alt=\"user\" src={fr.photoURL || userimage} />\r\n                                            }\r\n                                            title={fr.firstName + \" \" + fr.lastName}\r\n                                        />\r\n                                    </Card>\r\n                                </div>\r\n                            ))}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <div >\r\n                                <h3>last login date: {new Date(this.state.user.updatedAt).toLocaleDateString()}</h3>\r\n                            </div>\r\n                            <h1>Groups</h1>\r\n                            {this.state.user?.group.map((fr) => (\r\n                                <div key={fr._id}>\r\n                                    {/* <h3>{fr.firstName} {fr.lastName}</h3> */}\r\n                                    <Card className=\"friend\">\r\n                                        <CardHeader\r\n                                            avatar={\r\n                                                <Avatar alt=\"user\" src={fr.photoURL || userimage} />\r\n                                            }\r\n                                            title={fr.groupName}\r\n                                        />\r\n                                    </Card>\r\n                                </div>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                    : <div className=\"loader\">\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n                {this.showSnackbar()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.userState,\r\n        request: state.requestReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { allUser, sendRequest, singleUser })(Details);","import React, { Component } from \"react\";\r\nimport Login from './components/login';\r\nimport Register from './components/register';\r\nimport forgotPassword from './components/forgotPassword';\r\nimport Home from './page/home';\r\n//import Header from './components/header';\r\nimport Profile from './page/profile';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport resetPassword from './components/resetpassword';\r\nimport Friends from './page/friend';\r\nimport Groups from './page/group';\r\nimport Details from './page/userdetail';\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HashRouter>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/login\" component={Login} exact />\r\n                    <Route path=\"/register\" component={Register} exact />\r\n                    <Route path=\"/forgotPassword\" component={forgotPassword} exact />\r\n                    <Route path=\"/Profile\" component={Profile} exact />\r\n                    <Route path=\"/resetPassword/:email\" component={resetPassword} exact />\r\n                    <Route path=\"/friend\" component={Friends} exact />\r\n                    <Route path=\"/group\" component={Groups} exact />\r\n                    <Route path=\"/user/:id\" component={Details} />\r\n                </HashRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import { REGISTER, LOGOUT, LOGIN, UPDATEUSER, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD, SINGLEUSER } from '../type';\r\n\r\nconst initalstate = {\r\n    user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\r\n    isAuthenticated: localStorage.getItem(\"isAuth\") || false,\r\n    info: null,\r\n    error: null,\r\n    users: null,\r\n    useremail: null,\r\n    oneuser: null,\r\n    search: null\r\n}\r\n\r\nconst userReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    //console.log(type,payload)\r\n    switch (type) {\r\n        case REGISTER:\r\n            const newState = Object.assign(state, payload);\r\n            return newState;\r\n        // return {\r\n        //     ...state, info: payload.info, error: payload.error\r\n        // }\r\n        case LOGIN:\r\n            if (payload.user) {\r\n                localStorage.setItem('user', JSON.stringify(payload.user));\r\n                localStorage.setItem('isAuth', true);\r\n            }\r\n            return Object.assign(state, payload);\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"user\")\r\n            localStorage.removeItem(\"isAuth\")\r\n            return { ...state, user: null, isAuthenticated: false }\r\n        case ALLUSER:\r\n            return Object.assign(state, payload);\r\n        case FORGOTPASSWORD:\r\n            const newState1 = Object.assign(state, payload)\r\n            // console.log(newState1)\r\n            return newState1\r\n        case UPDATEUSER:\r\n            const user = { ...state.user, photoURL: payload.photoURL }\r\n            console.log(payload)\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return { ...state, user };\r\n        case CHANGEPASSWORD:\r\n            if (payload.user) {\r\n                localStorage.setItem('user', JSON.stringify(payload.user));\r\n            }\r\n            return Object.assign(state, payload);\r\n        case SINGLEUSER:\r\n            return Object.assign(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default userReducer;","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\r\n\r\nconst initalstate = {\r\n    request: null,\r\n    error: null,\r\n    requests: null,\r\n    update: null,\r\n    friends: null\r\n}\r\n\r\nconst requestReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    //console.log(payload)\r\n    switch (type) {\r\n        case REQUEST:\r\n            const newState = Object.assign(state, payload);\r\n            //console.log(newState)\r\n            return newState;\r\n        case ALLREQUEST:\r\n            return Object.assign(state, payload);\r\n        case UPDATEREQUEST:\r\n            return Object.assign(state, payload);\r\n        case FRIENDS:\r\n            return Object.assign(state, payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default requestReducer;","import { CREATEGROUP, FINDGROUP, SEARCHUSER, ALLMESSAGE } from '../type';\r\n\r\nconst initalstate = {\r\n    group: null,\r\n    error: null,\r\n    info: null,\r\n    groups: null,\r\n    searchQuery: null,\r\n    message: null\r\n}\r\n\r\nconst groupReducer = (state = initalstate, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case CREATEGROUP:\r\n            return { ...state, group: payload.group, error: payload.error };\r\n        case FINDGROUP:\r\n            return { ...state, groups: payload };\r\n        case SEARCHUSER:\r\n            return Object.assign(state, payload);\r\n        case ALLMESSAGE:\r\n            //console.log('payy', payload)\r\n            return { ...state, message: payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default groupReducer;","import { ALLMESSAGE, SINGLECHAT } from '../type';\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    singleMessages: []\r\n};\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case ALLMESSAGE:\r\n            return Object.assign(state, payload);\r\n        case SINGLECHAT:\r\n            return Object.assign(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ChatReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport userReducer from \"./reducer/user\";\r\nimport requestReducer from './reducer/request';\r\nimport thunk from 'redux-thunk';\r\nimport groupReducer from './reducer/group';\r\nimport chatReducer from './reducer/chat';\r\nconst rootReducer = combineReducers({ userState: userReducer, requestReducer, groupReducer, chatReducer })\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './app';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './style/style.css';\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);","module.exports = __webpack_public_path__ + \"static/media/ouricon.c1f7ad7e.jpg\";"],"sourceRoot":""}